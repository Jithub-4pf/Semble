
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ARROW AS ASSIGN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BREAK CHARACTER COLON COMMA COMMENT DEF DIV DIVIDE_ASSIGN DMINUS DOT DPLUS ELLIPSIS ELSE EQUAL FALSE FLOAT FOR GREATER_THAN GREATER_THAN_EQUAL I8 IF INTEGER LBRACE LBRACKET LEFT_SHIFT LESS_THAN LESS_THAN_EQUAL LET LET16 LET8 LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MEMBER_ACCESS MINUS_ASSIGN MODULO_ASSIGN MUL NAME NEWLINE NOT_EQUAL NULL OR PLUS_ASSIGN RBRACE RBRACKET RETURN RIGHT_SHIFT RPAREN SEMICOLON STRING STRING_LIT STRUCT SUB TERNARY_ELSE TERNARY_IF TIMES_ASSIGN TRUE WHILE\n    code : function\n         | struct\n         | code code\n    \n    struct : DEF NAME LBRACE NAME RBRACE\n    \n    struct : DEF NAME LBRACE name_list RBRACE\n    \n    functions : function function\n              | functions function\n    \n    struct : DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN\n    \n    struct : DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN\n    \n    struct : DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN\n    \n    struct : DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN\n    \n    function : DEF NAME LPAREN RPAREN statementc\n             | DEF NAME LPAREN RPAREN statement\n    \n    function : DEF NAME LPAREN argument RPAREN statementc\n             | DEF NAME LPAREN argument RPAREN statement\n    \n    function : DEF NAME LPAREN arg_list RPAREN statementc\n             | DEF NAME LPAREN arg_list RPAREN statement\n    \n    name_list : NAME COMMA NAME\n              | NAME COMMA name_list\n    \n    arg_list : argument COMMA argument\n             | argument COMMA arg_list\n    \n    statements : statement statements\n               | statement statement\n    \n    statementc : LBRACE statement RBRACE\n               | LBRACE statements RBRACE\n    \n    statement : NAME AS NAME SEMICOLON\n    \n    statement : LET NAME ASSIGN expression SEMICOLON\n    \n    statement : NAME NAME ASSIGN expression SEMICOLON\n    \n    statement : NAME NAME SEMICOLON\n    \n    statement : LET NAME SEMICOLON\n    \n    statement : NAME ASSIGN expression SEMICOLON\n    \n    statement : NAME DOT NAME ASSIGN expression SEMICOLON\n    \n    statement : expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON\n    \n    statement : expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON\n    \n    statement : RETURN expression SEMICOLON\n    \n    statement : NAME LPAREN expression_list RPAREN SEMICOLON\n              | NAME LPAREN expression RPAREN SEMICOLON\n    \n    statement : NAME LPAREN RPAREN SEMICOLON\n    \n    statement  : NAME DOT NAME LPAREN expression RPAREN SEMICOLON\n               | NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON\n    \n    statement  : NAME DOT NAME LPAREN RPAREN SEMICOLON\n    \n    statement : IF LPAREN expression RPAREN statementc\n              | IF LPAREN expression RPAREN statement\n    \n    statement : IF LPAREN expression RPAREN statementc ELSE statementc\n                | IF LPAREN expression RPAREN statement ELSE statement\n                | IF LPAREN expression RPAREN statementc ELSE statement\n                | IF LPAREN expression RPAREN statement ELSE statementc\n    \n    statement : FOR LPAREN statement expression SEMICOLON statement RPAREN statementc\n              | FOR LPAREN statement expression SEMICOLON statement RPAREN statement\n    \n    statement : WHILE LPAREN expression RPAREN statementc\n              | WHILE LPAREN expression RPAREN statement\n    \n    statement : BREAK SEMICOLON\n    \n    argument : NAME\n    \n    argument : NAME COLON NAME\n    \n    expression_list : expression COMMA expression_list\n                    | expression COMMA expression\n    \n    expression : NAME DOT NAME\n    \n    expression : NAME DOT NAME LPAREN expression RPAREN\n               | NAME DOT NAME LPAREN expression_list RPAREN\n    \n    expression : NAME DOT NAME LPAREN RPAREN\n    \n    expression : LBRACE expression RBRACE\n    \n    expression : LBRACE expression_list RBRACE\n    \n    expression : expression LBRACKET expression RBRACKET\n    \n    expression : expression LBRACKET I8 COLON expression RBRACKET\n    \n    expression : INTEGER\n               | NAME\n    \n    expression : STRING\n    \n    expression : STRING_LIT\n    \n    expression : expression ADD expression\n               | expression SUB expression\n               | expression MUL expression\n               | expression DIV expression\n               | expression EQUAL expression\n               | expression NOT_EQUAL expression\n               | expression GREATER_THAN_EQUAL expression\n               | expression LESS_THAN_EQUAL expression\n               | expression GREATER_THAN expression\n               | expression LESS_THAN expression\n               | expression LEFT_SHIFT expression\n               | expression RIGHT_SHIFT expression\n               | expression BITWISE_OR expression\n               | expression BITWISE_AND expression\n               \n    \n    expression : expression AND expression\n    \n    expression : expression OR expression\n    \n    statement : NAME DPLUS SEMICOLON\n                | NAME DMINUS SEMICOLON\n    \n  statement : DPLUS NAME SEMICOLON\n            | DMINUS NAME SEMICOLON\n  \n  expression : NAME DPLUS\n             | NAME DMINUS\n  \n  expression : DPLUS NAME\n             | DMINUS NAME\n  \n    expression : NAME LPAREN expression_list RPAREN\n              | NAME LPAREN expression RPAREN\n    \n    expression : NAME LPAREN RPAREN\n    \n    expression : LPAREN expression RPAREN\n    \n    expression : FALSE\n               | NULL\n    \n    expression : TRUE\n    \n    expression : LOGICAL_NOT expression\n    \n    expression : SUB expression\n    '
    
_lr_action_items = {'DEF':([0,1,2,3,5,18,19,41,43,83,88,89,92,93,94,97,99,106,107,118,120,125,144,148,149,151,152,153,154,156,157,161,178,179,180,181,182,183,184,189,190,196,199,200,202,203,204,206,217,218,222,224,225,226,227,230,231,232,],[4,4,-1,-2,4,-12,-13,-4,-5,-52,-14,-15,-16,-17,150,150,-29,-85,-86,-24,-25,-30,-35,-87,-88,150,150,150,150,-26,-31,-38,-8,-7,-6,-10,-9,-11,-28,-36,-37,-27,-42,-43,-50,-51,-32,-41,-39,-40,-33,-44,-46,-45,-47,-49,-48,-34,]),'$end':([1,2,3,5,18,19,41,43,83,88,89,92,93,99,106,107,118,120,125,144,148,149,156,157,161,178,181,182,183,184,189,190,196,199,200,202,203,204,206,217,218,222,224,225,226,227,230,231,232,],[0,-1,-2,-3,-12,-13,-4,-5,-52,-14,-15,-16,-17,-29,-85,-86,-24,-25,-30,-35,-87,-88,-26,-31,-38,-8,-10,-9,-11,-28,-36,-37,-27,-42,-43,-50,-51,-32,-41,-39,-40,-33,-44,-46,-45,-47,-49,-48,-34,]),'NAME':([4,7,8,10,15,16,17,20,21,23,28,29,33,37,38,39,40,42,46,47,48,49,54,55,56,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,110,111,117,118,120,122,124,125,144,146,148,149,150,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[6,9,13,16,44,45,53,16,61,53,84,85,53,53,16,9,16,95,100,53,102,53,53,115,116,16,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,16,53,-52,53,-29,-85,-86,53,165,53,16,-24,-25,53,53,-30,-35,53,-87,-88,177,-26,-31,53,53,-38,53,16,16,-28,-36,-37,53,53,-27,53,-42,-43,16,-50,-51,-32,-41,16,16,-39,-40,-33,53,-44,-46,-45,-47,16,-49,-48,-34,]),'LPAREN':([6,10,16,17,20,23,24,25,26,33,37,38,40,41,43,47,49,53,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,102,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,165,173,174,176,177,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[7,17,49,17,17,17,80,81,82,17,17,17,17,94,97,17,17,111,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-52,17,-29,159,-85,-86,17,17,17,-24,-25,17,17,-30,-35,17,-87,-88,-26,-31,17,17,-38,193,17,17,17,7,-28,-36,-37,17,17,-27,17,-42,-43,17,-50,-51,-32,-41,17,17,-39,-40,-33,17,-44,-46,-45,-47,17,-49,-48,-34,]),'LBRACE':([6,10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[8,20,54,54,54,54,54,20,20,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-52,54,-29,-85,-86,54,54,54,-24,-25,54,54,-30,-35,54,-87,-88,-26,-31,54,54,-38,54,20,20,-28,-36,-37,54,54,-27,54,-42,-43,54,-50,-51,-32,-41,20,20,-39,-40,-33,54,-44,-46,-45,-47,20,-49,-48,-34,]),'RPAREN':([7,9,11,12,18,19,30,31,32,34,35,36,44,49,52,53,83,86,87,88,89,90,91,92,93,99,103,105,106,107,108,111,112,113,115,116,118,120,121,123,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,151,152,153,154,156,157,159,161,165,166,167,168,169,170,179,180,184,186,188,189,190,191,193,194,195,196,199,200,202,203,204,206,209,210,211,216,217,218,219,220,221,222,224,225,226,227,230,231,232,],[10,-53,38,40,-12,-13,-65,-67,-68,-97,-98,-99,-54,104,108,-66,-52,-101,-100,-14,-15,-20,-21,-16,-17,-29,160,162,-85,-86,-96,167,-89,-90,-91,-92,-24,-25,-61,-62,-30,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-35,174,176,-87,-88,178,181,182,183,-26,-31,187,-38,-57,194,-95,195,-56,-55,-7,-6,-28,205,207,-36,-37,-63,210,-93,-94,-27,-42,-43,-50,-51,-32,-41,220,-60,221,228,-39,-40,-64,-58,-59,-33,-44,-46,-45,-47,-49,-48,-34,]),'COMMA':([9,11,13,16,30,31,32,34,35,36,44,50,51,53,59,84,85,86,87,90,95,102,104,105,108,112,113,114,115,116,121,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,160,162,165,167,168,169,172,186,187,191,194,195,205,207,209,210,213,219,220,221,],[-53,39,42,-66,-65,-67,-68,-97,-98,-99,-54,-89,-90,-66,122,-91,-92,-101,-100,39,42,-57,-95,122,-96,-89,-90,122,-91,-92,-61,-62,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-93,-94,-57,-95,122,122,-63,122,-60,-63,-93,-94,-58,-59,122,-60,-64,-64,-58,-59,]),'COLON':([9,127,164,],[15,173,192,]),'LET':([10,20,38,40,57,81,83,99,106,107,117,118,120,125,144,148,149,156,157,161,174,176,184,189,190,196,199,200,201,202,203,204,206,214,215,217,218,222,224,225,226,227,228,230,231,232,],[21,21,21,21,21,21,-52,-29,-85,-86,21,-24,-25,-30,-35,-87,-88,-26,-31,-38,21,21,-28,-36,-37,-27,-42,-43,21,-50,-51,-32,-41,21,21,-39,-40,-33,-44,-46,-45,-47,21,-49,-48,-34,]),'RETURN':([10,20,38,40,57,81,83,99,106,107,117,118,120,125,144,148,149,156,157,161,174,176,184,189,190,196,199,200,201,202,203,204,206,214,215,217,218,222,224,225,226,227,228,230,231,232,],[23,23,23,23,23,23,-52,-29,-85,-86,23,-24,-25,-30,-35,-87,-88,-26,-31,-38,23,23,-28,-36,-37,-27,-42,-43,23,-50,-51,-32,-41,23,23,-39,-40,-33,-44,-46,-45,-47,23,-49,-48,-34,]),'IF':([10,20,38,40,57,81,83,99,106,107,117,118,120,125,144,148,149,156,157,161,174,176,184,189,190,196,199,200,201,202,203,204,206,214,215,217,218,222,224,225,226,227,228,230,231,232,],[24,24,24,24,24,24,-52,-29,-85,-86,24,-24,-25,-30,-35,-87,-88,-26,-31,-38,24,24,-28,-36,-37,-27,-42,-43,24,-50,-51,-32,-41,24,24,-39,-40,-33,-44,-46,-45,-47,24,-49,-48,-34,]),'FOR':([10,20,38,40,57,81,83,99,106,107,117,118,120,125,144,148,149,156,157,161,174,176,184,189,190,196,199,200,201,202,203,204,206,214,215,217,218,222,224,225,226,227,228,230,231,232,],[25,25,25,25,25,25,-52,-29,-85,-86,25,-24,-25,-30,-35,-87,-88,-26,-31,-38,25,25,-28,-36,-37,-27,-42,-43,25,-50,-51,-32,-41,25,25,-39,-40,-33,-44,-46,-45,-47,25,-49,-48,-34,]),'WHILE':([10,20,38,40,57,81,83,99,106,107,117,118,120,125,144,148,149,156,157,161,174,176,184,189,190,196,199,200,201,202,203,204,206,214,215,217,218,222,224,225,226,227,228,230,231,232,],[26,26,26,26,26,26,-52,-29,-85,-86,26,-24,-25,-30,-35,-87,-88,-26,-31,-38,26,26,-28,-36,-37,-27,-42,-43,26,-50,-51,-32,-41,26,26,-39,-40,-33,-44,-46,-45,-47,26,-49,-48,-34,]),'BREAK':([10,20,38,40,57,81,83,99,106,107,117,118,120,125,144,148,149,156,157,161,174,176,184,189,190,196,199,200,201,202,203,204,206,214,215,217,218,222,224,225,226,227,228,230,231,232,],[27,27,27,27,27,27,-52,-29,-85,-86,27,-24,-25,-30,-35,-87,-88,-26,-31,-38,27,27,-28,-36,-37,-27,-42,-43,27,-50,-51,-32,-41,27,27,-39,-40,-33,-44,-46,-45,-47,27,-49,-48,-34,]),'DPLUS':([10,16,17,20,23,33,37,38,40,47,49,53,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[28,50,55,28,55,55,55,28,28,55,55,112,55,28,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,28,55,-52,55,-29,-85,-86,55,55,28,-24,-25,55,55,-30,-35,55,-87,-88,-26,-31,55,55,-38,55,28,28,-28,-36,-37,55,55,-27,55,-42,-43,28,-50,-51,-32,-41,28,28,-39,-40,-33,55,-44,-46,-45,-47,28,-49,-48,-34,]),'DMINUS':([10,16,17,20,23,33,37,38,40,47,49,53,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[29,51,56,29,56,56,56,29,29,56,56,113,56,29,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,29,56,-52,56,-29,-85,-86,56,56,29,-24,-25,56,56,-30,-35,56,-87,-88,-26,-31,56,56,-38,56,29,29,-28,-36,-37,56,56,-27,56,-42,-43,29,-50,-51,-32,-41,29,29,-39,-40,-33,56,-44,-46,-45,-47,29,-49,-48,-34,]),'INTEGER':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-52,30,-29,-85,-86,30,30,30,-24,-25,30,30,-30,-35,30,-87,-88,-26,-31,30,30,-38,30,30,30,-28,-36,-37,30,30,-27,30,-42,-43,30,-50,-51,-32,-41,30,30,-39,-40,-33,30,-44,-46,-45,-47,30,-49,-48,-34,]),'STRING':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-52,31,-29,-85,-86,31,31,31,-24,-25,31,31,-30,-35,31,-87,-88,-26,-31,31,31,-38,31,31,31,-28,-36,-37,31,31,-27,31,-42,-43,31,-50,-51,-32,-41,31,31,-39,-40,-33,31,-44,-46,-45,-47,31,-49,-48,-34,]),'STRING_LIT':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-52,32,-29,-85,-86,32,32,32,-24,-25,32,32,-30,-35,32,-87,-88,-26,-31,32,32,-38,32,32,32,-28,-36,-37,32,32,-27,32,-42,-43,32,-50,-51,-32,-41,32,32,-39,-40,-33,32,-44,-46,-45,-47,32,-49,-48,-34,]),'FALSE':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-52,34,-29,-85,-86,34,34,34,-24,-25,34,34,-30,-35,34,-87,-88,-26,-31,34,34,-38,34,34,34,-28,-36,-37,34,34,-27,34,-42,-43,34,-50,-51,-32,-41,34,34,-39,-40,-33,34,-44,-46,-45,-47,34,-49,-48,-34,]),'NULL':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-52,35,-29,-85,-86,35,35,35,-24,-25,35,35,-30,-35,35,-87,-88,-26,-31,35,35,-38,35,35,35,-28,-36,-37,35,35,-27,35,-42,-43,35,-50,-51,-32,-41,35,35,-39,-40,-33,35,-44,-46,-45,-47,35,-49,-48,-34,]),'TRUE':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-52,36,-29,-85,-86,36,36,36,-24,-25,36,36,-30,-35,36,-87,-88,-26,-31,36,36,-38,36,36,36,-28,-36,-37,36,36,-27,36,-42,-43,36,-50,-51,-32,-41,36,36,-39,-40,-33,36,-44,-46,-45,-47,36,-49,-48,-34,]),'LOGICAL_NOT':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,98,99,106,107,109,111,117,118,120,122,124,125,144,146,148,149,156,157,158,159,161,173,174,176,184,189,190,192,193,196,197,199,200,201,202,203,204,206,214,215,217,218,222,223,224,225,226,227,228,230,231,232,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-52,37,-29,-85,-86,37,37,37,-24,-25,37,37,-30,-35,37,-87,-88,-26,-31,37,37,-38,37,37,37,-28,-36,-37,37,37,-27,37,-42,-43,37,-50,-51,-32,-41,37,37,-39,-40,-33,37,-44,-46,-45,-47,37,-49,-48,-34,]),'SUB':([10,16,17,20,22,23,30,31,32,33,34,35,36,37,38,40,47,49,50,51,52,53,54,57,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,98,99,101,102,104,105,106,107,108,109,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,155,156,157,158,159,160,161,162,163,165,167,168,169,171,172,173,174,175,176,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,],[33,-66,33,33,64,33,-65,-67,-68,33,-97,-98,-99,33,33,33,33,33,-89,-90,64,-66,33,33,64,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,64,33,33,33,-52,-91,-92,64,64,33,-29,64,-57,-95,64,-85,-86,-96,33,33,-89,-90,64,-91,-92,33,-24,-25,-61,33,-62,33,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-35,64,33,64,-87,-88,64,-26,-31,33,33,-93,-38,-94,64,-57,-95,64,64,64,-63,33,33,64,33,-28,64,64,-60,-36,-37,-63,33,33,-93,-94,-27,33,64,-42,-43,33,-50,-51,-32,-58,-41,-59,64,64,-60,64,-64,33,33,-39,-40,-64,-58,-59,-33,33,-44,-46,-45,-47,33,64,-49,-48,-34,]),'RBRACE':([13,14,16,30,31,32,34,35,36,50,51,53,57,58,59,60,83,84,85,86,87,95,96,99,102,104,106,107,108,112,113,114,115,116,117,118,119,120,121,123,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,148,149,156,157,160,161,162,165,167,169,170,172,184,187,189,190,191,194,195,196,199,200,202,203,204,205,206,207,210,213,217,218,219,220,221,222,224,225,226,227,230,231,232,],[41,43,-66,-65,-67,-68,-97,-98,-99,-89,-90,-66,118,120,121,123,-52,-91,-92,-101,-100,-18,-19,-29,-57,-95,-85,-86,-96,-89,-90,121,-91,-92,-23,-24,-22,-25,-61,-62,-30,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-35,-87,-88,-26,-31,-93,-38,-94,-57,-95,-56,-55,-63,-28,-60,-36,-37,-63,-93,-94,-27,-42,-43,-50,-51,-32,-58,-41,-59,-60,-64,-39,-40,-64,-58,-59,-33,-44,-46,-45,-47,-49,-48,-34,]),'AS':([16,],[46,]),'ASSIGN':([16,45,61,102,172,213,],[47,98,124,158,197,223,]),'DOT':([16,53,],[48,110,]),'LBRACKET':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,62,-65,-67,-68,-97,-98,-99,-89,-90,109,-66,62,109,-91,-92,109,109,109,-57,-95,109,-96,-89,-90,109,-91,-92,-61,-62,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-93,-94,109,-57,-95,109,109,109,-63,109,109,109,-60,-63,-93,-94,109,-58,-59,109,109,-60,109,-64,-64,-58,-59,109,]),'ADD':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,63,-65,-67,-68,-97,-98,-99,-89,-90,63,-66,63,63,-91,-92,63,63,63,-57,-95,63,-96,-89,-90,63,-91,-92,-61,-62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-93,-94,63,-57,-95,63,63,63,-63,63,63,63,-60,-63,-93,-94,63,-58,-59,63,63,-60,63,-64,-64,-58,-59,63,]),'MUL':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,65,-65,-67,-68,-97,-98,-99,-89,-90,65,-66,65,65,-91,-92,65,65,65,-57,-95,65,-96,-89,-90,65,-91,-92,-61,-62,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-93,-94,65,-57,-95,65,65,65,-63,65,65,65,-60,-63,-93,-94,65,-58,-59,65,65,-60,65,-64,-64,-58,-59,65,]),'DIV':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,66,-65,-67,-68,-97,-98,-99,-89,-90,66,-66,66,66,-91,-92,66,66,66,-57,-95,66,-96,-89,-90,66,-91,-92,-61,-62,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-93,-94,66,-57,-95,66,66,66,-63,66,66,66,-60,-63,-93,-94,66,-58,-59,66,66,-60,66,-64,-64,-58,-59,66,]),'EQUAL':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,67,-65,-67,-68,-97,-98,-99,-89,-90,67,-66,67,67,-91,-92,67,67,67,-57,-95,67,-96,-89,-90,67,-91,-92,-61,-62,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-93,-94,67,-57,-95,67,67,67,-63,67,67,67,-60,-63,-93,-94,67,-58,-59,67,67,-60,67,-64,-64,-58,-59,67,]),'NOT_EQUAL':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,68,-65,-67,-68,-97,-98,-99,-89,-90,68,-66,68,68,-91,-92,68,68,68,-57,-95,68,-96,-89,-90,68,-91,-92,-61,-62,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-93,-94,68,-57,-95,68,68,68,-63,68,68,68,-60,-63,-93,-94,68,-58,-59,68,68,-60,68,-64,-64,-58,-59,68,]),'GREATER_THAN_EQUAL':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,69,-65,-67,-68,-97,-98,-99,-89,-90,69,-66,69,69,-91,-92,69,69,69,-57,-95,69,-96,-89,-90,69,-91,-92,-61,-62,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-93,-94,69,-57,-95,69,69,69,-63,69,69,69,-60,-63,-93,-94,69,-58,-59,69,69,-60,69,-64,-64,-58,-59,69,]),'LESS_THAN_EQUAL':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,70,-65,-67,-68,-97,-98,-99,-89,-90,70,-66,70,70,-91,-92,70,70,70,-57,-95,70,-96,-89,-90,70,-91,-92,-61,-62,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-93,-94,70,-57,-95,70,70,70,-63,70,70,70,-60,-63,-93,-94,70,-58,-59,70,70,-60,70,-64,-64,-58,-59,70,]),'GREATER_THAN':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,71,-65,-67,-68,-97,-98,-99,-89,-90,71,-66,71,71,-91,-92,71,71,71,-57,-95,71,-96,-89,-90,71,-91,-92,-61,-62,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-93,-94,71,-57,-95,71,71,71,-63,71,71,71,-60,-63,-93,-94,71,-58,-59,71,71,-60,71,-64,-64,-58,-59,71,]),'LESS_THAN':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,72,-65,-67,-68,-97,-98,-99,-89,-90,72,-66,72,72,-91,-92,72,72,72,-57,-95,72,-96,-89,-90,72,-91,-92,-61,-62,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-93,-94,72,-57,-95,72,72,72,-63,72,72,72,-60,-63,-93,-94,72,-58,-59,72,72,-60,72,-64,-64,-58,-59,72,]),'LEFT_SHIFT':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,73,-65,-67,-68,-97,-98,-99,-89,-90,73,-66,73,73,-91,-92,73,73,73,-57,-95,73,-96,-89,-90,73,-91,-92,-61,-62,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-93,-94,73,-57,-95,73,73,73,-63,73,73,73,-60,-63,-93,-94,73,-58,-59,73,73,-60,73,-64,-64,-58,-59,73,]),'RIGHT_SHIFT':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,74,-65,-67,-68,-97,-98,-99,-89,-90,74,-66,74,74,-91,-92,74,74,74,-57,-95,74,-96,-89,-90,74,-91,-92,-61,-62,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-93,-94,74,-57,-95,74,74,74,-63,74,74,74,-60,-63,-93,-94,74,-58,-59,74,74,-60,74,-64,-64,-58,-59,74,]),'BITWISE_OR':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,75,-65,-67,-68,-97,-98,-99,-89,-90,75,-66,75,75,-91,-92,75,75,75,-57,-95,75,-96,-89,-90,75,-91,-92,-61,-62,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-93,-94,75,-57,-95,75,75,75,-63,75,75,75,-60,-63,-93,-94,75,-58,-59,75,75,-60,75,-64,-64,-58,-59,75,]),'BITWISE_AND':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,76,-65,-67,-68,-97,-98,-99,-89,-90,76,-66,76,76,-91,-92,76,76,76,-57,-95,76,-96,-89,-90,76,-91,-92,-61,-62,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-93,-94,76,-57,-95,76,76,76,-63,76,76,76,-60,-63,-93,-94,76,-58,-59,76,76,-60,76,-64,-64,-58,-59,76,]),'AND':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,77,-65,-67,-68,-97,-98,-99,-89,-90,77,-66,77,77,-91,-92,77,77,77,-57,-95,77,-96,-89,-90,77,-91,-92,-61,-62,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-93,-94,77,-57,-95,77,77,77,-63,77,77,77,-60,-63,-93,-94,77,-58,-59,77,77,-60,77,-64,-64,-58,-59,77,]),'OR':([16,22,30,31,32,34,35,36,50,51,52,53,59,79,84,85,86,87,101,102,104,105,108,112,113,114,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,155,160,162,163,165,167,168,169,171,172,175,185,186,187,191,194,195,198,205,207,208,209,210,212,213,219,220,221,229,],[-66,78,-65,-67,-68,-97,-98,-99,-89,-90,78,-66,78,78,-91,-92,78,78,78,-57,-95,78,-96,-89,-90,78,-91,-92,-61,-62,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-93,-94,78,-57,-95,78,78,78,-63,78,78,78,-60,-63,-93,-94,78,-58,-59,78,78,-60,78,-64,-64,-58,-59,78,]),'SEMICOLON':([27,30,31,32,34,35,36,45,50,51,53,61,79,84,85,86,87,100,101,104,108,112,113,115,116,121,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,155,160,162,165,167,171,175,185,187,191,194,195,205,207,210,212,219,220,221,229,],[83,-65,-67,-68,-97,-98,-99,99,106,107,-66,125,144,148,149,-101,-100,156,157,161,-96,-89,-90,-91,-92,-61,-62,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,184,189,190,-57,-95,196,201,204,206,-63,-93,-94,217,218,-60,222,-64,-58,-59,232,]),'RBRACKET':([30,31,32,34,35,36,53,86,87,108,112,113,115,116,121,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,163,165,167,191,194,195,198,208,210,219,220,221,],[-65,-67,-68,-97,-98,-99,-66,-101,-100,-96,-89,-90,-91,-92,-61,-62,172,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,191,-57,-95,-63,-93,-94,213,219,-60,-64,-58,-59,]),'I8':([62,109,],[127,164,]),'ELSE':([83,99,106,107,118,120,125,144,148,149,156,157,161,184,189,190,196,199,200,202,203,204,206,217,218,222,224,225,226,227,230,231,232,],[-52,-29,-85,-86,-24,-25,-30,-35,-87,-88,-26,-31,-38,-28,-36,-37,-27,214,215,-50,-51,-32,-41,-39,-40,-33,-44,-46,-45,-47,-49,-48,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,1,5,],[1,5,5,]),'function':([0,1,5,94,97,151,152,153,154,],[2,2,2,152,154,179,180,179,180,]),'struct':([0,1,5,],[3,3,3,]),'argument':([7,39,],[11,90,]),'arg_list':([7,39,],[12,91,]),'name_list':([8,42,],[14,96,]),'statementc':([10,38,40,174,176,214,215,228,],[18,88,92,199,202,224,227,231,]),'statement':([10,20,38,40,57,81,117,174,176,201,214,215,228,],[19,57,89,93,117,146,117,200,203,216,225,226,230,]),'expression':([10,17,20,23,33,37,38,40,47,49,54,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,98,109,111,117,122,124,146,158,159,173,174,176,192,193,197,201,214,215,223,228,],[22,52,59,79,86,87,22,22,101,105,114,22,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,22,147,155,163,168,22,169,171,175,185,186,198,22,22,208,209,212,22,22,22,229,22,]),'statements':([20,57,117,],[58,119,119,]),'expression_list':([20,49,54,111,122,159,193,],[60,103,60,166,170,188,211,]),'functions':([94,97,],[151,153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> function','code',1,'p_code','main.py',210),
  ('code -> struct','code',1,'p_code','main.py',211),
  ('code -> code code','code',2,'p_code','main.py',212),
  ('struct -> DEF NAME LBRACE NAME RBRACE','struct',5,'p_struct_one_member','main.py',227),
  ('struct -> DEF NAME LBRACE name_list RBRACE','struct',5,'p_struct_members','main.py',236),
  ('functions -> function function','functions',2,'p_functions','main.py',245),
  ('functions -> functions function','functions',2,'p_functions','main.py',246),
  ('struct -> DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN','struct',8,'p_struct_one_member_with_methods','main.py',252),
  ('struct -> DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN','struct',8,'p_struct_members_with_methods','main.py',261),
  ('struct -> DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN','struct',8,'p_struct_one_member_with_method','main.py',270),
  ('struct -> DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN','struct',8,'p_struct_members_with_method','main.py',279),
  ('function -> DEF NAME LPAREN RPAREN statementc','function',5,'p_function_no_args','main.py',294),
  ('function -> DEF NAME LPAREN RPAREN statement','function',5,'p_function_no_args','main.py',295),
  ('function -> DEF NAME LPAREN argument RPAREN statementc','function',6,'p_function_one_arg','main.py',304),
  ('function -> DEF NAME LPAREN argument RPAREN statement','function',6,'p_function_one_arg','main.py',305),
  ('function -> DEF NAME LPAREN arg_list RPAREN statementc','function',6,'p_function_multi_args','main.py',314),
  ('function -> DEF NAME LPAREN arg_list RPAREN statement','function',6,'p_function_multi_args','main.py',315),
  ('name_list -> NAME COMMA NAME','name_list',3,'p_name_list','main.py',325),
  ('name_list -> NAME COMMA name_list','name_list',3,'p_name_list','main.py',326),
  ('arg_list -> argument COMMA argument','arg_list',3,'p_arg_list','main.py',332),
  ('arg_list -> argument COMMA arg_list','arg_list',3,'p_arg_list','main.py',333),
  ('statements -> statement statements','statements',2,'p_statements','main.py',347),
  ('statements -> statement statement','statements',2,'p_statements','main.py',348),
  ('statementc -> LBRACE statement RBRACE','statementc',3,'p_statementc','main.py',355),
  ('statementc -> LBRACE statements RBRACE','statementc',3,'p_statementc','main.py',356),
  ('statement -> NAME AS NAME SEMICOLON','statement',4,'p_as','main.py',369),
  ('statement -> LET NAME ASSIGN expression SEMICOLON','statement',5,'p_define_variable','main.py',375),
  ('statement -> NAME NAME ASSIGN expression SEMICOLON','statement',5,'p_define_variable_other_type','main.py',384),
  ('statement -> NAME NAME SEMICOLON','statement',3,'p_define_variable_other_type_no_val','main.py',393),
  ('statement -> LET NAME SEMICOLON','statement',3,'p_define_variable_no_value','main.py',402),
  ('statement -> NAME ASSIGN expression SEMICOLON','statement',4,'p_update_variable','main.py',411),
  ('statement -> NAME DOT NAME ASSIGN expression SEMICOLON','statement',6,'p_update_attribute','main.py',420),
  ('statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON','statement',7,'p_update_indexed','main.py',429),
  ('statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON','statement',9,'p_update_indexed_i8','main.py',438),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_return','main.py',448),
  ('statement -> NAME LPAREN expression_list RPAREN SEMICOLON','statement',5,'p_call_function','main.py',458),
  ('statement -> NAME LPAREN expression RPAREN SEMICOLON','statement',5,'p_call_function','main.py',459),
  ('statement -> NAME LPAREN RPAREN SEMICOLON','statement',4,'p_call_function_None','main.py',468),
  ('statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON','statement',7,'p_statement_member_method','main.py',477),
  ('statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON','statement',7,'p_statement_member_method','main.py',478),
  ('statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON','statement',6,'p_statement_member_method_none','main.py',484),
  ('statement -> IF LPAREN expression RPAREN statementc','statement',5,'p_statement_if','main.py',491),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement_if','main.py',492),
  ('statement -> IF LPAREN expression RPAREN statementc ELSE statementc','statement',7,'p_statement_ifelse','main.py',498),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_ifelse','main.py',499),
  ('statement -> IF LPAREN expression RPAREN statementc ELSE statement','statement',7,'p_statement_ifelse','main.py',500),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statementc','statement',7,'p_statement_ifelse','main.py',501),
  ('statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc','statement',8,'p_statement_for','main.py',507),
  ('statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement','statement',8,'p_statement_for','main.py',508),
  ('statement -> WHILE LPAREN expression RPAREN statementc','statement',5,'p_statement_while','main.py',516),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','main.py',517),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement_break','main.py',523),
  ('argument -> NAME','argument',1,'p_arg','main.py',536),
  ('argument -> NAME COLON NAME','argument',3,'p_arg_typed','main.py',542),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','main.py',554),
  ('expression_list -> expression COMMA expression','expression_list',3,'p_expression_list','main.py',555),
  ('expression -> NAME DOT NAME','expression',3,'p_expression_member','main.py',561),
  ('expression -> NAME DOT NAME LPAREN expression RPAREN','expression',6,'p_expression_member_method','main.py',568),
  ('expression -> NAME DOT NAME LPAREN expression_list RPAREN','expression',6,'p_expression_member_method','main.py',569),
  ('expression -> NAME DOT NAME LPAREN RPAREN','expression',5,'p_expression_member_method_none','main.py',575),
  ('expression -> LBRACE expression RBRACE','expression',3,'p_expression_bracketed_one','main.py',583),
  ('expression -> LBRACE expression_list RBRACE','expression',3,'p_expression_bracketed_multi','main.py',589),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_indexed','main.py',595),
  ('expression -> expression LBRACKET I8 COLON expression RBRACKET','expression',6,'p_expression_indexed_i8','main.py',601),
  ('expression -> INTEGER','expression',1,'p_expression_basic','main.py',610),
  ('expression -> NAME','expression',1,'p_expression_basic','main.py',611),
  ('expression -> STRING','expression',1,'p_expression_str','main.py',617),
  ('expression -> STRING_LIT','expression',1,'p_expression_str_lit','main.py',627),
  ('expression -> expression ADD expression','expression',3,'p_expression_operation','main.py',634),
  ('expression -> expression SUB expression','expression',3,'p_expression_operation','main.py',635),
  ('expression -> expression MUL expression','expression',3,'p_expression_operation','main.py',636),
  ('expression -> expression DIV expression','expression',3,'p_expression_operation','main.py',637),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_operation','main.py',638),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_operation','main.py',639),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression_operation','main.py',640),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression_operation','main.py',641),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_operation','main.py',642),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_operation','main.py',643),
  ('expression -> expression LEFT_SHIFT expression','expression',3,'p_expression_operation','main.py',644),
  ('expression -> expression RIGHT_SHIFT expression','expression',3,'p_expression_operation','main.py',645),
  ('expression -> expression BITWISE_OR expression','expression',3,'p_expression_operation','main.py',646),
  ('expression -> expression BITWISE_AND expression','expression',3,'p_expression_operation','main.py',647),
  ('expression -> expression AND expression','expression',3,'p_expression_and','main.py',654),
  ('expression -> expression OR expression','expression',3,'p_expression_or','main.py',660),
  ('statement -> NAME DPLUS SEMICOLON','statement',3,'p_statement_dplus','main.py',667),
  ('statement -> NAME DMINUS SEMICOLON','statement',3,'p_statement_dplus','main.py',668),
  ('statement -> DPLUS NAME SEMICOLON','statement',3,'p_statement_pdplus','main.py',676),
  ('statement -> DMINUS NAME SEMICOLON','statement',3,'p_statement_pdplus','main.py',677),
  ('expression -> NAME DPLUS','expression',2,'p_expression_dplus','main.py',684),
  ('expression -> NAME DMINUS','expression',2,'p_expression_dplus','main.py',685),
  ('expression -> DPLUS NAME','expression',2,'p_expression_dplusp','main.py',691),
  ('expression -> DMINUS NAME','expression',2,'p_expression_dplusp','main.py',692),
  ('expression -> NAME LPAREN expression_list RPAREN','expression',4,'p_call_function_exp','main.py',699),
  ('expression -> NAME LPAREN expression RPAREN','expression',4,'p_call_function_exp','main.py',700),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_call_function_exp_None','main.py',709),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_with_paren','main.py',718),
  ('expression -> FALSE','expression',1,'p_expression_false_and_NULL','main.py',724),
  ('expression -> NULL','expression',1,'p_expression_false_and_NULL','main.py',725),
  ('expression -> TRUE','expression',1,'p_expression_true','main.py',731),
  ('expression -> LOGICAL_NOT expression','expression',2,'p_expression_unary','main.py',737),
  ('expression -> SUB expression','expression',2,'p_negative','main.py',743),
]
