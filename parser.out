Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    BITWISE_NOT
    BITWISE_XOR
    CHARACTER
    COMMENT
    DIVIDE_ASSIGN
    ELLIPSIS
    FLOAT
    LET16
    LET8
    LOGICAL_AND
    LOGICAL_OR
    MEMBER_ACCESS
    MINUS_ASSIGN
    MODULO_ASSIGN
    NEWLINE
    PLUS_ASSIGN
    STRUCT
    TERNARY_ELSE
    TERNARY_IF
    TIMES_ASSIGN

Grammar

Rule 0     S' -> code
Rule 1     code -> function
Rule 2     code -> struct
Rule 3     code -> code code
Rule 4     struct -> DEF NAME LBRACE NAME RBRACE
Rule 5     struct -> DEF NAME LBRACE name_list RBRACE
Rule 6     functions -> function function
Rule 7     functions -> functions function
Rule 8     struct -> DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN
Rule 9     struct -> DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN
Rule 10    struct -> DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN
Rule 11    struct -> DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN
Rule 12    function -> DEF NAME LPAREN RPAREN statementc
Rule 13    function -> DEF NAME LPAREN RPAREN statement
Rule 14    function -> DEF NAME LPAREN argument RPAREN statementc
Rule 15    function -> DEF NAME LPAREN argument RPAREN statement
Rule 16    function -> DEF NAME LPAREN arg_list RPAREN statementc
Rule 17    function -> DEF NAME LPAREN arg_list RPAREN statement
Rule 18    name_list -> NAME COMMA NAME
Rule 19    name_list -> NAME COMMA name_list
Rule 20    arg_list -> argument COMMA argument
Rule 21    arg_list -> argument COMMA arg_list
Rule 22    statements -> statement statements
Rule 23    statements -> statement statement
Rule 24    statementc -> LBRACE statement RBRACE
Rule 25    statementc -> LBRACE statements RBRACE
Rule 26    statement -> NAME AS NAME SEMICOLON
Rule 27    statement -> LET NAME ASSIGN expression SEMICOLON
Rule 28    statement -> NAME NAME ASSIGN expression SEMICOLON
Rule 29    statement -> NAME NAME SEMICOLON
Rule 30    statement -> LET NAME SEMICOLON
Rule 31    statement -> NAME ASSIGN expression SEMICOLON
Rule 32    statement -> NAME DOT NAME ASSIGN expression SEMICOLON
Rule 33    statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
Rule 34    statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
Rule 35    statement -> RETURN expression SEMICOLON
Rule 36    statement -> NAME LPAREN expression_list RPAREN SEMICOLON
Rule 37    statement -> NAME LPAREN expression RPAREN SEMICOLON
Rule 38    statement -> NAME LPAREN RPAREN SEMICOLON
Rule 39    statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON
Rule 40    statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
Rule 41    statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON
Rule 42    statement -> IF LPAREN expression RPAREN statementc
Rule 43    statement -> IF LPAREN expression RPAREN statement
Rule 44    statement -> IF LPAREN expression RPAREN statementc ELSE statementc
Rule 45    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 46    statement -> IF LPAREN expression RPAREN statementc ELSE statement
Rule 47    statement -> IF LPAREN expression RPAREN statement ELSE statementc
Rule 48    statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
Rule 49    statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement
Rule 50    statement -> WHILE LPAREN expression RPAREN statementc
Rule 51    statement -> WHILE LPAREN expression RPAREN statement
Rule 52    statement -> BREAK SEMICOLON
Rule 53    argument -> NAME
Rule 54    argument -> NAME COLON NAME
Rule 55    expression_list -> expression COMMA expression_list
Rule 56    expression_list -> expression COMMA expression
Rule 57    expression -> NAME DOT NAME
Rule 58    expression -> NAME DOT NAME LPAREN expression RPAREN
Rule 59    expression -> NAME DOT NAME LPAREN expression_list RPAREN
Rule 60    expression -> NAME DOT NAME LPAREN RPAREN
Rule 61    expression -> LBRACE expression RBRACE
Rule 62    expression -> LBRACE expression_list RBRACE
Rule 63    expression -> expression LBRACKET expression RBRACKET
Rule 64    expression -> expression LBRACKET I8 COLON expression RBRACKET
Rule 65    expression -> INTEGER
Rule 66    expression -> NAME
Rule 67    expression -> STRING
Rule 68    expression -> STRING_LIT
Rule 69    expression -> expression ADD expression
Rule 70    expression -> expression SUB expression
Rule 71    expression -> expression MUL expression
Rule 72    expression -> expression DIV expression
Rule 73    expression -> expression EQUAL expression
Rule 74    expression -> expression NOT_EQUAL expression
Rule 75    expression -> expression GREATER_THAN_EQUAL expression
Rule 76    expression -> expression LESS_THAN_EQUAL expression
Rule 77    expression -> expression GREATER_THAN expression
Rule 78    expression -> expression LESS_THAN expression
Rule 79    expression -> expression LEFT_SHIFT expression
Rule 80    expression -> expression RIGHT_SHIFT expression
Rule 81    expression -> expression BITWISE_OR expression
Rule 82    expression -> expression BITWISE_AND expression
Rule 83    expression -> expression AND expression
Rule 84    expression -> expression OR expression
Rule 85    statement -> NAME DPLUS SEMICOLON
Rule 86    statement -> NAME DMINUS SEMICOLON
Rule 87    statement -> DPLUS NAME SEMICOLON
Rule 88    statement -> DMINUS NAME SEMICOLON
Rule 89    expression -> NAME DPLUS
Rule 90    expression -> NAME DMINUS
Rule 91    expression -> DPLUS NAME
Rule 92    expression -> DMINUS NAME
Rule 93    expression -> NAME LPAREN expression_list RPAREN
Rule 94    expression -> NAME LPAREN expression RPAREN
Rule 95    expression -> NAME LPAREN RPAREN
Rule 96    expression -> LPAREN expression RPAREN
Rule 97    expression -> FALSE
Rule 98    expression -> NULL
Rule 99    expression -> TRUE
Rule 100   expression -> LOGICAL_NOT expression
Rule 101   expression -> SUB expression

Terminals, with rules where they appear

ADD                  : 69
AND                  : 83
ARROW                : 
AS                   : 26
ASSIGN               : 27 28 31 32 33 34
BITWISE_AND          : 82
BITWISE_NOT          : 
BITWISE_OR           : 81
BITWISE_XOR          : 
BREAK                : 52
CHARACTER            : 
COLON                : 34 54 64
COMMA                : 18 19 20 21 55 56
COMMENT              : 
DEF                  : 4 5 8 9 10 11 12 13 14 15 16 17
DIV                  : 72
DIVIDE_ASSIGN        : 
DMINUS               : 86 88 90 92
DOT                  : 32 39 40 41 57 58 59 60
DPLUS                : 85 87 89 91
ELLIPSIS             : 
ELSE                 : 44 45 46 47
EQUAL                : 73
FALSE                : 97
FLOAT                : 
FOR                  : 48 49
GREATER_THAN         : 77
GREATER_THAN_EQUAL   : 75
I8                   : 34 64
IF                   : 42 43 44 45 46 47
INTEGER              : 65
LBRACE               : 4 5 8 9 10 11 24 25 61 62
LBRACKET             : 33 34 63 64
LEFT_SHIFT           : 79
LESS_THAN            : 78
LESS_THAN_EQUAL      : 76
LET                  : 27 30
LET16                : 
LET8                 : 
LOGICAL_AND          : 
LOGICAL_NOT          : 100
LOGICAL_OR           : 
LPAREN               : 8 9 10 11 12 13 14 15 16 17 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 58 59 60 93 94 95 96
MEMBER_ACCESS        : 
MINUS_ASSIGN         : 
MODULO_ASSIGN        : 
MUL                  : 71
NAME                 : 4 4 5 8 8 9 10 10 11 12 13 14 15 16 17 18 18 19 26 26 27 28 28 29 29 30 31 32 32 36 37 38 39 39 40 40 41 41 53 54 54 57 57 58 58 59 59 60 60 66 85 86 87 88 89 90 91 92 93 94 95
NEWLINE              : 
NOT_EQUAL            : 74
NULL                 : 98
OR                   : 84
PLUS_ASSIGN          : 
RBRACE               : 4 5 8 9 10 11 24 25 61 62
RBRACKET             : 33 34 63 64
RETURN               : 35
RIGHT_SHIFT          : 80
RPAREN               : 8 9 10 11 12 13 14 15 16 17 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 58 59 60 93 94 95 96
SEMICOLON            : 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 48 49 52 85 86 87 88
STRING               : 67
STRING_LIT           : 68
STRUCT               : 
SUB                  : 70 101
TERNARY_ELSE         : 
TERNARY_IF           : 
TIMES_ASSIGN         : 
TRUE                 : 99
WHILE                : 50 51
error                : 

Nonterminals, with rules where they appear

arg_list             : 16 17 21
argument             : 14 15 20 20 21
code                 : 3 3 0
expression           : 27 28 31 32 33 33 33 34 34 34 35 37 39 42 43 44 45 46 47 48 49 50 51 55 56 56 58 61 63 63 64 64 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 94 96 100 101
expression_list      : 36 40 55 59 62 93
function             : 1 6 6 7 10 11
functions            : 7 8 9
name_list            : 5 9 11 19
statement            : 13 15 17 22 23 23 24 43 45 45 46 47 48 48 49 49 49 51
statementc           : 12 14 16 42 44 44 46 47 48 50
statements           : 22 25
struct               : 2

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . function
    (2) code -> . struct
    (3) code -> . code code
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement
    (4) struct -> . DEF NAME LBRACE NAME RBRACE
    (5) struct -> . DEF NAME LBRACE name_list RBRACE
    (8) struct -> . DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN
    (9) struct -> . DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN
    (10) struct -> . DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN
    (11) struct -> . DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN

    DEF             shift and go to state 4

    code                           shift and go to state 1
    function                       shift and go to state 2
    struct                         shift and go to state 3

state 1

    (0) S' -> code .
    (3) code -> code . code
    (1) code -> . function
    (2) code -> . struct
    (3) code -> . code code
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement
    (4) struct -> . DEF NAME LBRACE NAME RBRACE
    (5) struct -> . DEF NAME LBRACE name_list RBRACE
    (8) struct -> . DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN
    (9) struct -> . DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN
    (10) struct -> . DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN
    (11) struct -> . DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN

    DEF             shift and go to state 4

    code                           shift and go to state 5
    function                       shift and go to state 2
    struct                         shift and go to state 3

state 2

    (1) code -> function .

    DEF             reduce using rule 1 (code -> function .)
    $end            reduce using rule 1 (code -> function .)


state 3

    (2) code -> struct .

    DEF             reduce using rule 2 (code -> struct .)
    $end            reduce using rule 2 (code -> struct .)


state 4

    (12) function -> DEF . NAME LPAREN RPAREN statementc
    (13) function -> DEF . NAME LPAREN RPAREN statement
    (14) function -> DEF . NAME LPAREN argument RPAREN statementc
    (15) function -> DEF . NAME LPAREN argument RPAREN statement
    (16) function -> DEF . NAME LPAREN arg_list RPAREN statementc
    (17) function -> DEF . NAME LPAREN arg_list RPAREN statement
    (4) struct -> DEF . NAME LBRACE NAME RBRACE
    (5) struct -> DEF . NAME LBRACE name_list RBRACE
    (8) struct -> DEF . NAME LBRACE NAME RBRACE LPAREN functions RPAREN
    (9) struct -> DEF . NAME LBRACE name_list RBRACE LPAREN functions RPAREN
    (10) struct -> DEF . NAME LBRACE NAME RBRACE LPAREN function RPAREN
    (11) struct -> DEF . NAME LBRACE name_list RBRACE LPAREN function RPAREN

    NAME            shift and go to state 6


state 5

    (3) code -> code code .
    (3) code -> code . code
    (1) code -> . function
    (2) code -> . struct
    (3) code -> . code code
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement
    (4) struct -> . DEF NAME LBRACE NAME RBRACE
    (5) struct -> . DEF NAME LBRACE name_list RBRACE
    (8) struct -> . DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN
    (9) struct -> . DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN
    (10) struct -> . DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN
    (11) struct -> . DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN

  ! shift/reduce conflict for DEF resolved as shift
    $end            reduce using rule 3 (code -> code code .)
    DEF             shift and go to state 4

  ! DEF             [ reduce using rule 3 (code -> code code .) ]

    code                           shift and go to state 5
    function                       shift and go to state 2
    struct                         shift and go to state 3

state 6

    (12) function -> DEF NAME . LPAREN RPAREN statementc
    (13) function -> DEF NAME . LPAREN RPAREN statement
    (14) function -> DEF NAME . LPAREN argument RPAREN statementc
    (15) function -> DEF NAME . LPAREN argument RPAREN statement
    (16) function -> DEF NAME . LPAREN arg_list RPAREN statementc
    (17) function -> DEF NAME . LPAREN arg_list RPAREN statement
    (4) struct -> DEF NAME . LBRACE NAME RBRACE
    (5) struct -> DEF NAME . LBRACE name_list RBRACE
    (8) struct -> DEF NAME . LBRACE NAME RBRACE LPAREN functions RPAREN
    (9) struct -> DEF NAME . LBRACE name_list RBRACE LPAREN functions RPAREN
    (10) struct -> DEF NAME . LBRACE NAME RBRACE LPAREN function RPAREN
    (11) struct -> DEF NAME . LBRACE name_list RBRACE LPAREN function RPAREN

    LPAREN          shift and go to state 7
    LBRACE          shift and go to state 8


state 7

    (12) function -> DEF NAME LPAREN . RPAREN statementc
    (13) function -> DEF NAME LPAREN . RPAREN statement
    (14) function -> DEF NAME LPAREN . argument RPAREN statementc
    (15) function -> DEF NAME LPAREN . argument RPAREN statement
    (16) function -> DEF NAME LPAREN . arg_list RPAREN statementc
    (17) function -> DEF NAME LPAREN . arg_list RPAREN statement
    (53) argument -> . NAME
    (54) argument -> . NAME COLON NAME
    (20) arg_list -> . argument COMMA argument
    (21) arg_list -> . argument COMMA arg_list

    RPAREN          shift and go to state 10
    NAME            shift and go to state 9

    argument                       shift and go to state 11
    arg_list                       shift and go to state 12

state 8

    (4) struct -> DEF NAME LBRACE . NAME RBRACE
    (5) struct -> DEF NAME LBRACE . name_list RBRACE
    (8) struct -> DEF NAME LBRACE . NAME RBRACE LPAREN functions RPAREN
    (9) struct -> DEF NAME LBRACE . name_list RBRACE LPAREN functions RPAREN
    (10) struct -> DEF NAME LBRACE . NAME RBRACE LPAREN function RPAREN
    (11) struct -> DEF NAME LBRACE . name_list RBRACE LPAREN function RPAREN
    (18) name_list -> . NAME COMMA NAME
    (19) name_list -> . NAME COMMA name_list

    NAME            shift and go to state 13

    name_list                      shift and go to state 14

state 9

    (53) argument -> NAME .
    (54) argument -> NAME . COLON NAME

    RPAREN          reduce using rule 53 (argument -> NAME .)
    COMMA           reduce using rule 53 (argument -> NAME .)
    COLON           shift and go to state 15


state 10

    (12) function -> DEF NAME LPAREN RPAREN . statementc
    (13) function -> DEF NAME LPAREN RPAREN . statement
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    LBRACE          shift and go to state 20
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statementc                     shift and go to state 18
    statement                      shift and go to state 19
    expression                     shift and go to state 22

state 11

    (14) function -> DEF NAME LPAREN argument . RPAREN statementc
    (15) function -> DEF NAME LPAREN argument . RPAREN statement
    (20) arg_list -> argument . COMMA argument
    (21) arg_list -> argument . COMMA arg_list

    RPAREN          shift and go to state 38
    COMMA           shift and go to state 39


state 12

    (16) function -> DEF NAME LPAREN arg_list . RPAREN statementc
    (17) function -> DEF NAME LPAREN arg_list . RPAREN statement

    RPAREN          shift and go to state 40


state 13

    (4) struct -> DEF NAME LBRACE NAME . RBRACE
    (8) struct -> DEF NAME LBRACE NAME . RBRACE LPAREN functions RPAREN
    (10) struct -> DEF NAME LBRACE NAME . RBRACE LPAREN function RPAREN
    (18) name_list -> NAME . COMMA NAME
    (19) name_list -> NAME . COMMA name_list

    RBRACE          shift and go to state 41
    COMMA           shift and go to state 42


state 14

    (5) struct -> DEF NAME LBRACE name_list . RBRACE
    (9) struct -> DEF NAME LBRACE name_list . RBRACE LPAREN functions RPAREN
    (11) struct -> DEF NAME LBRACE name_list . RBRACE LPAREN function RPAREN

    RBRACE          shift and go to state 43


state 15

    (54) argument -> NAME COLON . NAME

    NAME            shift and go to state 44


state 16

    (26) statement -> NAME . AS NAME SEMICOLON
    (28) statement -> NAME . NAME ASSIGN expression SEMICOLON
    (29) statement -> NAME . NAME SEMICOLON
    (31) statement -> NAME . ASSIGN expression SEMICOLON
    (32) statement -> NAME . DOT NAME ASSIGN expression SEMICOLON
    (36) statement -> NAME . LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> NAME . LPAREN expression RPAREN SEMICOLON
    (38) statement -> NAME . LPAREN RPAREN SEMICOLON
    (39) statement -> NAME . DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> NAME . DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> NAME . DOT NAME LPAREN RPAREN SEMICOLON
    (85) statement -> NAME . DPLUS SEMICOLON
    (86) statement -> NAME . DMINUS SEMICOLON
    (57) expression -> NAME . DOT NAME
    (58) expression -> NAME . DOT NAME LPAREN expression RPAREN
    (59) expression -> NAME . DOT NAME LPAREN expression_list RPAREN
    (60) expression -> NAME . DOT NAME LPAREN RPAREN
    (66) expression -> NAME .
    (89) expression -> NAME . DPLUS
    (90) expression -> NAME . DMINUS
    (93) expression -> NAME . LPAREN expression_list RPAREN
    (94) expression -> NAME . LPAREN expression RPAREN
    (95) expression -> NAME . LPAREN RPAREN

    AS              shift and go to state 46
    NAME            shift and go to state 45
    ASSIGN          shift and go to state 47
    DOT             shift and go to state 48
    LPAREN          shift and go to state 49
    DPLUS           shift and go to state 50
    DMINUS          shift and go to state 51
    LBRACKET        reduce using rule 66 (expression -> NAME .)
    ADD             reduce using rule 66 (expression -> NAME .)
    SUB             reduce using rule 66 (expression -> NAME .)
    MUL             reduce using rule 66 (expression -> NAME .)
    DIV             reduce using rule 66 (expression -> NAME .)
    EQUAL           reduce using rule 66 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 66 (expression -> NAME .)
    GREATER_THAN_EQUAL reduce using rule 66 (expression -> NAME .)
    LESS_THAN_EQUAL reduce using rule 66 (expression -> NAME .)
    GREATER_THAN    reduce using rule 66 (expression -> NAME .)
    LESS_THAN       reduce using rule 66 (expression -> NAME .)
    LEFT_SHIFT      reduce using rule 66 (expression -> NAME .)
    RIGHT_SHIFT     reduce using rule 66 (expression -> NAME .)
    BITWISE_OR      reduce using rule 66 (expression -> NAME .)
    BITWISE_AND     reduce using rule 66 (expression -> NAME .)
    AND             reduce using rule 66 (expression -> NAME .)
    OR              reduce using rule 66 (expression -> NAME .)
    RBRACE          reduce using rule 66 (expression -> NAME .)
    COMMA           reduce using rule 66 (expression -> NAME .)


state 17

    (96) expression -> LPAREN . expression RPAREN
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 52

state 18

    (12) function -> DEF NAME LPAREN RPAREN statementc .

    DEF             reduce using rule 12 (function -> DEF NAME LPAREN RPAREN statementc .)
    $end            reduce using rule 12 (function -> DEF NAME LPAREN RPAREN statementc .)
    RPAREN          reduce using rule 12 (function -> DEF NAME LPAREN RPAREN statementc .)


state 19

    (13) function -> DEF NAME LPAREN RPAREN statement .

    DEF             reduce using rule 13 (function -> DEF NAME LPAREN RPAREN statement .)
    $end            reduce using rule 13 (function -> DEF NAME LPAREN RPAREN statement .)
    RPAREN          reduce using rule 13 (function -> DEF NAME LPAREN RPAREN statement .)


state 20

    (24) statementc -> LBRACE . statement RBRACE
    (25) statementc -> LBRACE . statements RBRACE
    (61) expression -> LBRACE . expression RBRACE
    (62) expression -> LBRACE . expression_list RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (22) statements -> . statement statements
    (23) statements -> . statement statement
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression
    (55) expression_list -> . expression COMMA expression_list
    (56) expression_list -> . expression COMMA expression

    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statement                      shift and go to state 57
    statements                     shift and go to state 58
    expression                     shift and go to state 59
    expression_list                shift and go to state 60

state 21

    (27) statement -> LET . NAME ASSIGN expression SEMICOLON
    (30) statement -> LET . NAME SEMICOLON

    NAME            shift and go to state 61


state 22

    (33) statement -> expression . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> expression . LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    LBRACKET        shift and go to state 62
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 23

    (35) statement -> RETURN . expression SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 79

state 24

    (42) statement -> IF . LPAREN expression RPAREN statementc
    (43) statement -> IF . LPAREN expression RPAREN statement
    (44) statement -> IF . LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> IF . LPAREN expression RPAREN statement ELSE statement
    (46) statement -> IF . LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> IF . LPAREN expression RPAREN statement ELSE statementc

    LPAREN          shift and go to state 80


state 25

    (48) statement -> FOR . LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> FOR . LPAREN statement expression SEMICOLON statement RPAREN statement

    LPAREN          shift and go to state 81


state 26

    (50) statement -> WHILE . LPAREN expression RPAREN statementc
    (51) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 82


state 27

    (52) statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 83


state 28

    (87) statement -> DPLUS . NAME SEMICOLON
    (91) expression -> DPLUS . NAME

    NAME            shift and go to state 84


state 29

    (88) statement -> DMINUS . NAME SEMICOLON
    (92) expression -> DMINUS . NAME

    NAME            shift and go to state 85


state 30

    (65) expression -> INTEGER .

    LBRACKET        reduce using rule 65 (expression -> INTEGER .)
    ADD             reduce using rule 65 (expression -> INTEGER .)
    SUB             reduce using rule 65 (expression -> INTEGER .)
    MUL             reduce using rule 65 (expression -> INTEGER .)
    DIV             reduce using rule 65 (expression -> INTEGER .)
    EQUAL           reduce using rule 65 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 65 (expression -> INTEGER .)
    GREATER_THAN_EQUAL reduce using rule 65 (expression -> INTEGER .)
    LESS_THAN_EQUAL reduce using rule 65 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 65 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 65 (expression -> INTEGER .)
    LEFT_SHIFT      reduce using rule 65 (expression -> INTEGER .)
    RIGHT_SHIFT     reduce using rule 65 (expression -> INTEGER .)
    BITWISE_OR      reduce using rule 65 (expression -> INTEGER .)
    BITWISE_AND     reduce using rule 65 (expression -> INTEGER .)
    AND             reduce using rule 65 (expression -> INTEGER .)
    OR              reduce using rule 65 (expression -> INTEGER .)
    RPAREN          reduce using rule 65 (expression -> INTEGER .)
    RBRACE          reduce using rule 65 (expression -> INTEGER .)
    COMMA           reduce using rule 65 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 65 (expression -> INTEGER .)
    RBRACKET        reduce using rule 65 (expression -> INTEGER .)


state 31

    (67) expression -> STRING .

    LBRACKET        reduce using rule 67 (expression -> STRING .)
    ADD             reduce using rule 67 (expression -> STRING .)
    SUB             reduce using rule 67 (expression -> STRING .)
    MUL             reduce using rule 67 (expression -> STRING .)
    DIV             reduce using rule 67 (expression -> STRING .)
    EQUAL           reduce using rule 67 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 67 (expression -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 67 (expression -> STRING .)
    LESS_THAN_EQUAL reduce using rule 67 (expression -> STRING .)
    GREATER_THAN    reduce using rule 67 (expression -> STRING .)
    LESS_THAN       reduce using rule 67 (expression -> STRING .)
    LEFT_SHIFT      reduce using rule 67 (expression -> STRING .)
    RIGHT_SHIFT     reduce using rule 67 (expression -> STRING .)
    BITWISE_OR      reduce using rule 67 (expression -> STRING .)
    BITWISE_AND     reduce using rule 67 (expression -> STRING .)
    AND             reduce using rule 67 (expression -> STRING .)
    OR              reduce using rule 67 (expression -> STRING .)
    RPAREN          reduce using rule 67 (expression -> STRING .)
    RBRACE          reduce using rule 67 (expression -> STRING .)
    COMMA           reduce using rule 67 (expression -> STRING .)
    SEMICOLON       reduce using rule 67 (expression -> STRING .)
    RBRACKET        reduce using rule 67 (expression -> STRING .)


state 32

    (68) expression -> STRING_LIT .

    LBRACKET        reduce using rule 68 (expression -> STRING_LIT .)
    ADD             reduce using rule 68 (expression -> STRING_LIT .)
    SUB             reduce using rule 68 (expression -> STRING_LIT .)
    MUL             reduce using rule 68 (expression -> STRING_LIT .)
    DIV             reduce using rule 68 (expression -> STRING_LIT .)
    EQUAL           reduce using rule 68 (expression -> STRING_LIT .)
    NOT_EQUAL       reduce using rule 68 (expression -> STRING_LIT .)
    GREATER_THAN_EQUAL reduce using rule 68 (expression -> STRING_LIT .)
    LESS_THAN_EQUAL reduce using rule 68 (expression -> STRING_LIT .)
    GREATER_THAN    reduce using rule 68 (expression -> STRING_LIT .)
    LESS_THAN       reduce using rule 68 (expression -> STRING_LIT .)
    LEFT_SHIFT      reduce using rule 68 (expression -> STRING_LIT .)
    RIGHT_SHIFT     reduce using rule 68 (expression -> STRING_LIT .)
    BITWISE_OR      reduce using rule 68 (expression -> STRING_LIT .)
    BITWISE_AND     reduce using rule 68 (expression -> STRING_LIT .)
    AND             reduce using rule 68 (expression -> STRING_LIT .)
    OR              reduce using rule 68 (expression -> STRING_LIT .)
    RPAREN          reduce using rule 68 (expression -> STRING_LIT .)
    RBRACE          reduce using rule 68 (expression -> STRING_LIT .)
    COMMA           reduce using rule 68 (expression -> STRING_LIT .)
    SEMICOLON       reduce using rule 68 (expression -> STRING_LIT .)
    RBRACKET        reduce using rule 68 (expression -> STRING_LIT .)


state 33

    (101) expression -> SUB . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 86

state 34

    (97) expression -> FALSE .

    LBRACKET        reduce using rule 97 (expression -> FALSE .)
    ADD             reduce using rule 97 (expression -> FALSE .)
    SUB             reduce using rule 97 (expression -> FALSE .)
    MUL             reduce using rule 97 (expression -> FALSE .)
    DIV             reduce using rule 97 (expression -> FALSE .)
    EQUAL           reduce using rule 97 (expression -> FALSE .)
    NOT_EQUAL       reduce using rule 97 (expression -> FALSE .)
    GREATER_THAN_EQUAL reduce using rule 97 (expression -> FALSE .)
    LESS_THAN_EQUAL reduce using rule 97 (expression -> FALSE .)
    GREATER_THAN    reduce using rule 97 (expression -> FALSE .)
    LESS_THAN       reduce using rule 97 (expression -> FALSE .)
    LEFT_SHIFT      reduce using rule 97 (expression -> FALSE .)
    RIGHT_SHIFT     reduce using rule 97 (expression -> FALSE .)
    BITWISE_OR      reduce using rule 97 (expression -> FALSE .)
    BITWISE_AND     reduce using rule 97 (expression -> FALSE .)
    AND             reduce using rule 97 (expression -> FALSE .)
    OR              reduce using rule 97 (expression -> FALSE .)
    RPAREN          reduce using rule 97 (expression -> FALSE .)
    RBRACE          reduce using rule 97 (expression -> FALSE .)
    COMMA           reduce using rule 97 (expression -> FALSE .)
    SEMICOLON       reduce using rule 97 (expression -> FALSE .)
    RBRACKET        reduce using rule 97 (expression -> FALSE .)


state 35

    (98) expression -> NULL .

    LBRACKET        reduce using rule 98 (expression -> NULL .)
    ADD             reduce using rule 98 (expression -> NULL .)
    SUB             reduce using rule 98 (expression -> NULL .)
    MUL             reduce using rule 98 (expression -> NULL .)
    DIV             reduce using rule 98 (expression -> NULL .)
    EQUAL           reduce using rule 98 (expression -> NULL .)
    NOT_EQUAL       reduce using rule 98 (expression -> NULL .)
    GREATER_THAN_EQUAL reduce using rule 98 (expression -> NULL .)
    LESS_THAN_EQUAL reduce using rule 98 (expression -> NULL .)
    GREATER_THAN    reduce using rule 98 (expression -> NULL .)
    LESS_THAN       reduce using rule 98 (expression -> NULL .)
    LEFT_SHIFT      reduce using rule 98 (expression -> NULL .)
    RIGHT_SHIFT     reduce using rule 98 (expression -> NULL .)
    BITWISE_OR      reduce using rule 98 (expression -> NULL .)
    BITWISE_AND     reduce using rule 98 (expression -> NULL .)
    AND             reduce using rule 98 (expression -> NULL .)
    OR              reduce using rule 98 (expression -> NULL .)
    RPAREN          reduce using rule 98 (expression -> NULL .)
    RBRACE          reduce using rule 98 (expression -> NULL .)
    COMMA           reduce using rule 98 (expression -> NULL .)
    SEMICOLON       reduce using rule 98 (expression -> NULL .)
    RBRACKET        reduce using rule 98 (expression -> NULL .)


state 36

    (99) expression -> TRUE .

    LBRACKET        reduce using rule 99 (expression -> TRUE .)
    ADD             reduce using rule 99 (expression -> TRUE .)
    SUB             reduce using rule 99 (expression -> TRUE .)
    MUL             reduce using rule 99 (expression -> TRUE .)
    DIV             reduce using rule 99 (expression -> TRUE .)
    EQUAL           reduce using rule 99 (expression -> TRUE .)
    NOT_EQUAL       reduce using rule 99 (expression -> TRUE .)
    GREATER_THAN_EQUAL reduce using rule 99 (expression -> TRUE .)
    LESS_THAN_EQUAL reduce using rule 99 (expression -> TRUE .)
    GREATER_THAN    reduce using rule 99 (expression -> TRUE .)
    LESS_THAN       reduce using rule 99 (expression -> TRUE .)
    LEFT_SHIFT      reduce using rule 99 (expression -> TRUE .)
    RIGHT_SHIFT     reduce using rule 99 (expression -> TRUE .)
    BITWISE_OR      reduce using rule 99 (expression -> TRUE .)
    BITWISE_AND     reduce using rule 99 (expression -> TRUE .)
    AND             reduce using rule 99 (expression -> TRUE .)
    OR              reduce using rule 99 (expression -> TRUE .)
    RPAREN          reduce using rule 99 (expression -> TRUE .)
    RBRACE          reduce using rule 99 (expression -> TRUE .)
    COMMA           reduce using rule 99 (expression -> TRUE .)
    SEMICOLON       reduce using rule 99 (expression -> TRUE .)
    RBRACKET        reduce using rule 99 (expression -> TRUE .)


state 37

    (100) expression -> LOGICAL_NOT . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 87

state 38

    (14) function -> DEF NAME LPAREN argument RPAREN . statementc
    (15) function -> DEF NAME LPAREN argument RPAREN . statement
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    LBRACE          shift and go to state 20
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statementc                     shift and go to state 88
    statement                      shift and go to state 89
    expression                     shift and go to state 22

state 39

    (20) arg_list -> argument COMMA . argument
    (21) arg_list -> argument COMMA . arg_list
    (53) argument -> . NAME
    (54) argument -> . NAME COLON NAME
    (20) arg_list -> . argument COMMA argument
    (21) arg_list -> . argument COMMA arg_list

    NAME            shift and go to state 9

    argument                       shift and go to state 90
    arg_list                       shift and go to state 91

state 40

    (16) function -> DEF NAME LPAREN arg_list RPAREN . statementc
    (17) function -> DEF NAME LPAREN arg_list RPAREN . statement
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    LBRACE          shift and go to state 20
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statementc                     shift and go to state 92
    statement                      shift and go to state 93
    expression                     shift and go to state 22

state 41

    (4) struct -> DEF NAME LBRACE NAME RBRACE .
    (8) struct -> DEF NAME LBRACE NAME RBRACE . LPAREN functions RPAREN
    (10) struct -> DEF NAME LBRACE NAME RBRACE . LPAREN function RPAREN

    DEF             reduce using rule 4 (struct -> DEF NAME LBRACE NAME RBRACE .)
    $end            reduce using rule 4 (struct -> DEF NAME LBRACE NAME RBRACE .)
    LPAREN          shift and go to state 94


state 42

    (18) name_list -> NAME COMMA . NAME
    (19) name_list -> NAME COMMA . name_list
    (18) name_list -> . NAME COMMA NAME
    (19) name_list -> . NAME COMMA name_list

    NAME            shift and go to state 95

    name_list                      shift and go to state 96

state 43

    (5) struct -> DEF NAME LBRACE name_list RBRACE .
    (9) struct -> DEF NAME LBRACE name_list RBRACE . LPAREN functions RPAREN
    (11) struct -> DEF NAME LBRACE name_list RBRACE . LPAREN function RPAREN

    DEF             reduce using rule 5 (struct -> DEF NAME LBRACE name_list RBRACE .)
    $end            reduce using rule 5 (struct -> DEF NAME LBRACE name_list RBRACE .)
    LPAREN          shift and go to state 97


state 44

    (54) argument -> NAME COLON NAME .

    RPAREN          reduce using rule 54 (argument -> NAME COLON NAME .)
    COMMA           reduce using rule 54 (argument -> NAME COLON NAME .)


state 45

    (28) statement -> NAME NAME . ASSIGN expression SEMICOLON
    (29) statement -> NAME NAME . SEMICOLON

    ASSIGN          shift and go to state 98
    SEMICOLON       shift and go to state 99


state 46

    (26) statement -> NAME AS . NAME SEMICOLON

    NAME            shift and go to state 100


state 47

    (31) statement -> NAME ASSIGN . expression SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 101

state 48

    (32) statement -> NAME DOT . NAME ASSIGN expression SEMICOLON
    (39) statement -> NAME DOT . NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> NAME DOT . NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> NAME DOT . NAME LPAREN RPAREN SEMICOLON
    (57) expression -> NAME DOT . NAME
    (58) expression -> NAME DOT . NAME LPAREN expression RPAREN
    (59) expression -> NAME DOT . NAME LPAREN expression_list RPAREN
    (60) expression -> NAME DOT . NAME LPAREN RPAREN

    NAME            shift and go to state 102


state 49

    (36) statement -> NAME LPAREN . expression_list RPAREN SEMICOLON
    (37) statement -> NAME LPAREN . expression RPAREN SEMICOLON
    (38) statement -> NAME LPAREN . RPAREN SEMICOLON
    (93) expression -> NAME LPAREN . expression_list RPAREN
    (94) expression -> NAME LPAREN . expression RPAREN
    (95) expression -> NAME LPAREN . RPAREN
    (55) expression_list -> . expression COMMA expression_list
    (56) expression_list -> . expression COMMA expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    RPAREN          shift and go to state 104
    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression_list                shift and go to state 103
    expression                     shift and go to state 105

state 50

    (85) statement -> NAME DPLUS . SEMICOLON
    (89) expression -> NAME DPLUS .

    SEMICOLON       shift and go to state 106
    LBRACKET        reduce using rule 89 (expression -> NAME DPLUS .)
    ADD             reduce using rule 89 (expression -> NAME DPLUS .)
    SUB             reduce using rule 89 (expression -> NAME DPLUS .)
    MUL             reduce using rule 89 (expression -> NAME DPLUS .)
    DIV             reduce using rule 89 (expression -> NAME DPLUS .)
    EQUAL           reduce using rule 89 (expression -> NAME DPLUS .)
    NOT_EQUAL       reduce using rule 89 (expression -> NAME DPLUS .)
    GREATER_THAN_EQUAL reduce using rule 89 (expression -> NAME DPLUS .)
    LESS_THAN_EQUAL reduce using rule 89 (expression -> NAME DPLUS .)
    GREATER_THAN    reduce using rule 89 (expression -> NAME DPLUS .)
    LESS_THAN       reduce using rule 89 (expression -> NAME DPLUS .)
    LEFT_SHIFT      reduce using rule 89 (expression -> NAME DPLUS .)
    RIGHT_SHIFT     reduce using rule 89 (expression -> NAME DPLUS .)
    BITWISE_OR      reduce using rule 89 (expression -> NAME DPLUS .)
    BITWISE_AND     reduce using rule 89 (expression -> NAME DPLUS .)
    AND             reduce using rule 89 (expression -> NAME DPLUS .)
    OR              reduce using rule 89 (expression -> NAME DPLUS .)
    RBRACE          reduce using rule 89 (expression -> NAME DPLUS .)
    COMMA           reduce using rule 89 (expression -> NAME DPLUS .)


state 51

    (86) statement -> NAME DMINUS . SEMICOLON
    (90) expression -> NAME DMINUS .

    SEMICOLON       shift and go to state 107
    LBRACKET        reduce using rule 90 (expression -> NAME DMINUS .)
    ADD             reduce using rule 90 (expression -> NAME DMINUS .)
    SUB             reduce using rule 90 (expression -> NAME DMINUS .)
    MUL             reduce using rule 90 (expression -> NAME DMINUS .)
    DIV             reduce using rule 90 (expression -> NAME DMINUS .)
    EQUAL           reduce using rule 90 (expression -> NAME DMINUS .)
    NOT_EQUAL       reduce using rule 90 (expression -> NAME DMINUS .)
    GREATER_THAN_EQUAL reduce using rule 90 (expression -> NAME DMINUS .)
    LESS_THAN_EQUAL reduce using rule 90 (expression -> NAME DMINUS .)
    GREATER_THAN    reduce using rule 90 (expression -> NAME DMINUS .)
    LESS_THAN       reduce using rule 90 (expression -> NAME DMINUS .)
    LEFT_SHIFT      reduce using rule 90 (expression -> NAME DMINUS .)
    RIGHT_SHIFT     reduce using rule 90 (expression -> NAME DMINUS .)
    BITWISE_OR      reduce using rule 90 (expression -> NAME DMINUS .)
    BITWISE_AND     reduce using rule 90 (expression -> NAME DMINUS .)
    AND             reduce using rule 90 (expression -> NAME DMINUS .)
    OR              reduce using rule 90 (expression -> NAME DMINUS .)
    RBRACE          reduce using rule 90 (expression -> NAME DMINUS .)
    COMMA           reduce using rule 90 (expression -> NAME DMINUS .)


state 52

    (96) expression -> LPAREN expression . RPAREN
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 108
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 53

    (57) expression -> NAME . DOT NAME
    (58) expression -> NAME . DOT NAME LPAREN expression RPAREN
    (59) expression -> NAME . DOT NAME LPAREN expression_list RPAREN
    (60) expression -> NAME . DOT NAME LPAREN RPAREN
    (66) expression -> NAME .
    (89) expression -> NAME . DPLUS
    (90) expression -> NAME . DMINUS
    (93) expression -> NAME . LPAREN expression_list RPAREN
    (94) expression -> NAME . LPAREN expression RPAREN
    (95) expression -> NAME . LPAREN RPAREN

    DOT             shift and go to state 110
    RPAREN          reduce using rule 66 (expression -> NAME .)
    LBRACKET        reduce using rule 66 (expression -> NAME .)
    ADD             reduce using rule 66 (expression -> NAME .)
    SUB             reduce using rule 66 (expression -> NAME .)
    MUL             reduce using rule 66 (expression -> NAME .)
    DIV             reduce using rule 66 (expression -> NAME .)
    EQUAL           reduce using rule 66 (expression -> NAME .)
    NOT_EQUAL       reduce using rule 66 (expression -> NAME .)
    GREATER_THAN_EQUAL reduce using rule 66 (expression -> NAME .)
    LESS_THAN_EQUAL reduce using rule 66 (expression -> NAME .)
    GREATER_THAN    reduce using rule 66 (expression -> NAME .)
    LESS_THAN       reduce using rule 66 (expression -> NAME .)
    LEFT_SHIFT      reduce using rule 66 (expression -> NAME .)
    RIGHT_SHIFT     reduce using rule 66 (expression -> NAME .)
    BITWISE_OR      reduce using rule 66 (expression -> NAME .)
    BITWISE_AND     reduce using rule 66 (expression -> NAME .)
    AND             reduce using rule 66 (expression -> NAME .)
    OR              reduce using rule 66 (expression -> NAME .)
    SEMICOLON       reduce using rule 66 (expression -> NAME .)
    RBRACE          reduce using rule 66 (expression -> NAME .)
    COMMA           reduce using rule 66 (expression -> NAME .)
    RBRACKET        reduce using rule 66 (expression -> NAME .)
    DPLUS           shift and go to state 112
    DMINUS          shift and go to state 113
    LPAREN          shift and go to state 111


state 54

    (61) expression -> LBRACE . expression RBRACE
    (62) expression -> LBRACE . expression_list RBRACE
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression
    (55) expression_list -> . expression COMMA expression_list
    (56) expression_list -> . expression COMMA expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 114
    expression_list                shift and go to state 60

state 55

    (91) expression -> DPLUS . NAME

    NAME            shift and go to state 115


state 56

    (92) expression -> DMINUS . NAME

    NAME            shift and go to state 116


state 57

    (24) statementc -> LBRACE statement . RBRACE
    (22) statements -> statement . statements
    (23) statements -> statement . statement
    (22) statements -> . statement statements
    (23) statements -> . statement statement
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    RBRACE          shift and go to state 118
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statement                      shift and go to state 117
    statements                     shift and go to state 119
    expression                     shift and go to state 22

state 58

    (25) statementc -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 120


state 59

    (61) expression -> LBRACE expression . RBRACE
    (33) statement -> expression . LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> expression . LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression
    (55) expression_list -> expression . COMMA expression_list
    (56) expression_list -> expression . COMMA expression

    RBRACE          shift and go to state 121
    LBRACKET        shift and go to state 62
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    COMMA           shift and go to state 122


state 60

    (62) expression -> LBRACE expression_list . RBRACE

    RBRACE          shift and go to state 123


state 61

    (27) statement -> LET NAME . ASSIGN expression SEMICOLON
    (30) statement -> LET NAME . SEMICOLON

    ASSIGN          shift and go to state 124
    SEMICOLON       shift and go to state 125


state 62

    (33) statement -> expression LBRACKET . expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> expression LBRACKET . I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (63) expression -> expression LBRACKET . expression RBRACKET
    (64) expression -> expression LBRACKET . I8 COLON expression RBRACKET
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    I8              shift and go to state 127
    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 126

state 63

    (69) expression -> expression ADD . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 128

state 64

    (70) expression -> expression SUB . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 129

state 65

    (71) expression -> expression MUL . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 130

state 66

    (72) expression -> expression DIV . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 131

state 67

    (73) expression -> expression EQUAL . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 132

state 68

    (74) expression -> expression NOT_EQUAL . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 133

state 69

    (75) expression -> expression GREATER_THAN_EQUAL . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 134

state 70

    (76) expression -> expression LESS_THAN_EQUAL . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 135

state 71

    (77) expression -> expression GREATER_THAN . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 136

state 72

    (78) expression -> expression LESS_THAN . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 137

state 73

    (79) expression -> expression LEFT_SHIFT . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 138

state 74

    (80) expression -> expression RIGHT_SHIFT . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 139

state 75

    (81) expression -> expression BITWISE_OR . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 140

state 76

    (82) expression -> expression BITWISE_AND . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 141

state 77

    (83) expression -> expression AND . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 142

state 78

    (84) expression -> expression OR . expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 143

state 79

    (35) statement -> RETURN expression . SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 144
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 80

    (42) statement -> IF LPAREN . expression RPAREN statementc
    (43) statement -> IF LPAREN . expression RPAREN statement
    (44) statement -> IF LPAREN . expression RPAREN statementc ELSE statementc
    (45) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (46) statement -> IF LPAREN . expression RPAREN statementc ELSE statement
    (47) statement -> IF LPAREN . expression RPAREN statement ELSE statementc
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 145

state 81

    (48) statement -> FOR LPAREN . statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> FOR LPAREN . statement expression SEMICOLON statement RPAREN statement
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statement                      shift and go to state 146
    expression                     shift and go to state 22

state 82

    (50) statement -> WHILE LPAREN . expression RPAREN statementc
    (51) statement -> WHILE LPAREN . expression RPAREN statement
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 147

state 83

    (52) statement -> BREAK SEMICOLON .

    DEF             reduce using rule 52 (statement -> BREAK SEMICOLON .)
    $end            reduce using rule 52 (statement -> BREAK SEMICOLON .)
    RPAREN          reduce using rule 52 (statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 52 (statement -> BREAK SEMICOLON .)
    NAME            reduce using rule 52 (statement -> BREAK SEMICOLON .)
    LET             reduce using rule 52 (statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 52 (statement -> BREAK SEMICOLON .)
    IF              reduce using rule 52 (statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 52 (statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 52 (statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 52 (statement -> BREAK SEMICOLON .)
    DPLUS           reduce using rule 52 (statement -> BREAK SEMICOLON .)
    DMINUS          reduce using rule 52 (statement -> BREAK SEMICOLON .)
    LBRACE          reduce using rule 52 (statement -> BREAK SEMICOLON .)
    INTEGER         reduce using rule 52 (statement -> BREAK SEMICOLON .)
    STRING          reduce using rule 52 (statement -> BREAK SEMICOLON .)
    STRING_LIT      reduce using rule 52 (statement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 52 (statement -> BREAK SEMICOLON .)
    FALSE           reduce using rule 52 (statement -> BREAK SEMICOLON .)
    NULL            reduce using rule 52 (statement -> BREAK SEMICOLON .)
    TRUE            reduce using rule 52 (statement -> BREAK SEMICOLON .)
    LOGICAL_NOT     reduce using rule 52 (statement -> BREAK SEMICOLON .)
    SUB             reduce using rule 52 (statement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 52 (statement -> BREAK SEMICOLON .)


state 84

    (87) statement -> DPLUS NAME . SEMICOLON
    (91) expression -> DPLUS NAME .

    SEMICOLON       shift and go to state 148
    LBRACKET        reduce using rule 91 (expression -> DPLUS NAME .)
    ADD             reduce using rule 91 (expression -> DPLUS NAME .)
    SUB             reduce using rule 91 (expression -> DPLUS NAME .)
    MUL             reduce using rule 91 (expression -> DPLUS NAME .)
    DIV             reduce using rule 91 (expression -> DPLUS NAME .)
    EQUAL           reduce using rule 91 (expression -> DPLUS NAME .)
    NOT_EQUAL       reduce using rule 91 (expression -> DPLUS NAME .)
    GREATER_THAN_EQUAL reduce using rule 91 (expression -> DPLUS NAME .)
    LESS_THAN_EQUAL reduce using rule 91 (expression -> DPLUS NAME .)
    GREATER_THAN    reduce using rule 91 (expression -> DPLUS NAME .)
    LESS_THAN       reduce using rule 91 (expression -> DPLUS NAME .)
    LEFT_SHIFT      reduce using rule 91 (expression -> DPLUS NAME .)
    RIGHT_SHIFT     reduce using rule 91 (expression -> DPLUS NAME .)
    BITWISE_OR      reduce using rule 91 (expression -> DPLUS NAME .)
    BITWISE_AND     reduce using rule 91 (expression -> DPLUS NAME .)
    AND             reduce using rule 91 (expression -> DPLUS NAME .)
    OR              reduce using rule 91 (expression -> DPLUS NAME .)
    RBRACE          reduce using rule 91 (expression -> DPLUS NAME .)
    COMMA           reduce using rule 91 (expression -> DPLUS NAME .)


state 85

    (88) statement -> DMINUS NAME . SEMICOLON
    (92) expression -> DMINUS NAME .

    SEMICOLON       shift and go to state 149
    LBRACKET        reduce using rule 92 (expression -> DMINUS NAME .)
    ADD             reduce using rule 92 (expression -> DMINUS NAME .)
    SUB             reduce using rule 92 (expression -> DMINUS NAME .)
    MUL             reduce using rule 92 (expression -> DMINUS NAME .)
    DIV             reduce using rule 92 (expression -> DMINUS NAME .)
    EQUAL           reduce using rule 92 (expression -> DMINUS NAME .)
    NOT_EQUAL       reduce using rule 92 (expression -> DMINUS NAME .)
    GREATER_THAN_EQUAL reduce using rule 92 (expression -> DMINUS NAME .)
    LESS_THAN_EQUAL reduce using rule 92 (expression -> DMINUS NAME .)
    GREATER_THAN    reduce using rule 92 (expression -> DMINUS NAME .)
    LESS_THAN       reduce using rule 92 (expression -> DMINUS NAME .)
    LEFT_SHIFT      reduce using rule 92 (expression -> DMINUS NAME .)
    RIGHT_SHIFT     reduce using rule 92 (expression -> DMINUS NAME .)
    BITWISE_OR      reduce using rule 92 (expression -> DMINUS NAME .)
    BITWISE_AND     reduce using rule 92 (expression -> DMINUS NAME .)
    AND             reduce using rule 92 (expression -> DMINUS NAME .)
    OR              reduce using rule 92 (expression -> DMINUS NAME .)
    RBRACE          reduce using rule 92 (expression -> DMINUS NAME .)
    COMMA           reduce using rule 92 (expression -> DMINUS NAME .)


state 86

    (101) expression -> SUB expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 101 (expression -> SUB expression .)
    RBRACE          reduce using rule 101 (expression -> SUB expression .)
    COMMA           reduce using rule 101 (expression -> SUB expression .)
    SEMICOLON       reduce using rule 101 (expression -> SUB expression .)
    RBRACKET        reduce using rule 101 (expression -> SUB expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 101 (expression -> SUB expression .) ]
  ! ADD             [ reduce using rule 101 (expression -> SUB expression .) ]
  ! SUB             [ reduce using rule 101 (expression -> SUB expression .) ]
  ! MUL             [ reduce using rule 101 (expression -> SUB expression .) ]
  ! DIV             [ reduce using rule 101 (expression -> SUB expression .) ]
  ! EQUAL           [ reduce using rule 101 (expression -> SUB expression .) ]
  ! NOT_EQUAL       [ reduce using rule 101 (expression -> SUB expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 101 (expression -> SUB expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 101 (expression -> SUB expression .) ]
  ! GREATER_THAN    [ reduce using rule 101 (expression -> SUB expression .) ]
  ! LESS_THAN       [ reduce using rule 101 (expression -> SUB expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 101 (expression -> SUB expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 101 (expression -> SUB expression .) ]
  ! BITWISE_OR      [ reduce using rule 101 (expression -> SUB expression .) ]
  ! BITWISE_AND     [ reduce using rule 101 (expression -> SUB expression .) ]
  ! AND             [ reduce using rule 101 (expression -> SUB expression .) ]
  ! OR              [ reduce using rule 101 (expression -> SUB expression .) ]


state 87

    (100) expression -> LOGICAL_NOT expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 100 (expression -> LOGICAL_NOT expression .)
    RBRACE          reduce using rule 100 (expression -> LOGICAL_NOT expression .)
    COMMA           reduce using rule 100 (expression -> LOGICAL_NOT expression .)
    SEMICOLON       reduce using rule 100 (expression -> LOGICAL_NOT expression .)
    RBRACKET        reduce using rule 100 (expression -> LOGICAL_NOT expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! ADD             [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! SUB             [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! MUL             [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! DIV             [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! EQUAL           [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! BITWISE_OR      [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! BITWISE_AND     [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! AND             [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]
  ! OR              [ reduce using rule 100 (expression -> LOGICAL_NOT expression .) ]


state 88

    (14) function -> DEF NAME LPAREN argument RPAREN statementc .

    DEF             reduce using rule 14 (function -> DEF NAME LPAREN argument RPAREN statementc .)
    $end            reduce using rule 14 (function -> DEF NAME LPAREN argument RPAREN statementc .)
    RPAREN          reduce using rule 14 (function -> DEF NAME LPAREN argument RPAREN statementc .)


state 89

    (15) function -> DEF NAME LPAREN argument RPAREN statement .

    DEF             reduce using rule 15 (function -> DEF NAME LPAREN argument RPAREN statement .)
    $end            reduce using rule 15 (function -> DEF NAME LPAREN argument RPAREN statement .)
    RPAREN          reduce using rule 15 (function -> DEF NAME LPAREN argument RPAREN statement .)


state 90

    (20) arg_list -> argument COMMA argument .
    (20) arg_list -> argument . COMMA argument
    (21) arg_list -> argument . COMMA arg_list

    RPAREN          reduce using rule 20 (arg_list -> argument COMMA argument .)
    COMMA           shift and go to state 39


state 91

    (21) arg_list -> argument COMMA arg_list .

    RPAREN          reduce using rule 21 (arg_list -> argument COMMA arg_list .)


state 92

    (16) function -> DEF NAME LPAREN arg_list RPAREN statementc .

    DEF             reduce using rule 16 (function -> DEF NAME LPAREN arg_list RPAREN statementc .)
    $end            reduce using rule 16 (function -> DEF NAME LPAREN arg_list RPAREN statementc .)
    RPAREN          reduce using rule 16 (function -> DEF NAME LPAREN arg_list RPAREN statementc .)


state 93

    (17) function -> DEF NAME LPAREN arg_list RPAREN statement .

    DEF             reduce using rule 17 (function -> DEF NAME LPAREN arg_list RPAREN statement .)
    $end            reduce using rule 17 (function -> DEF NAME LPAREN arg_list RPAREN statement .)
    RPAREN          reduce using rule 17 (function -> DEF NAME LPAREN arg_list RPAREN statement .)


state 94

    (8) struct -> DEF NAME LBRACE NAME RBRACE LPAREN . functions RPAREN
    (10) struct -> DEF NAME LBRACE NAME RBRACE LPAREN . function RPAREN
    (6) functions -> . function function
    (7) functions -> . functions function
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement

    DEF             shift and go to state 150

    functions                      shift and go to state 151
    function                       shift and go to state 152

state 95

    (18) name_list -> NAME COMMA NAME .
    (18) name_list -> NAME . COMMA NAME
    (19) name_list -> NAME . COMMA name_list

    RBRACE          reduce using rule 18 (name_list -> NAME COMMA NAME .)
    COMMA           shift and go to state 42


state 96

    (19) name_list -> NAME COMMA name_list .

    RBRACE          reduce using rule 19 (name_list -> NAME COMMA name_list .)


state 97

    (9) struct -> DEF NAME LBRACE name_list RBRACE LPAREN . functions RPAREN
    (11) struct -> DEF NAME LBRACE name_list RBRACE LPAREN . function RPAREN
    (6) functions -> . function function
    (7) functions -> . functions function
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement

    DEF             shift and go to state 150

    functions                      shift and go to state 153
    function                       shift and go to state 154

state 98

    (28) statement -> NAME NAME ASSIGN . expression SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 155

state 99

    (29) statement -> NAME NAME SEMICOLON .

    DEF             reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    $end            reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    RPAREN          reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    RBRACE          reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    NAME            reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    LET             reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    IF              reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    FOR             reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    BREAK           reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    DPLUS           reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    DMINUS          reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    LBRACE          reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    INTEGER         reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    STRING          reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    STRING_LIT      reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    LPAREN          reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    FALSE           reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    NULL            reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    TRUE            reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    LOGICAL_NOT     reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    SUB             reduce using rule 29 (statement -> NAME NAME SEMICOLON .)
    ELSE            reduce using rule 29 (statement -> NAME NAME SEMICOLON .)


state 100

    (26) statement -> NAME AS NAME . SEMICOLON

    SEMICOLON       shift and go to state 156


state 101

    (31) statement -> NAME ASSIGN expression . SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 157
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 102

    (32) statement -> NAME DOT NAME . ASSIGN expression SEMICOLON
    (39) statement -> NAME DOT NAME . LPAREN expression RPAREN SEMICOLON
    (40) statement -> NAME DOT NAME . LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> NAME DOT NAME . LPAREN RPAREN SEMICOLON
    (57) expression -> NAME DOT NAME .
    (58) expression -> NAME DOT NAME . LPAREN expression RPAREN
    (59) expression -> NAME DOT NAME . LPAREN expression_list RPAREN
    (60) expression -> NAME DOT NAME . LPAREN RPAREN

    ASSIGN          shift and go to state 158
    LPAREN          shift and go to state 159
    LBRACKET        reduce using rule 57 (expression -> NAME DOT NAME .)
    ADD             reduce using rule 57 (expression -> NAME DOT NAME .)
    SUB             reduce using rule 57 (expression -> NAME DOT NAME .)
    MUL             reduce using rule 57 (expression -> NAME DOT NAME .)
    DIV             reduce using rule 57 (expression -> NAME DOT NAME .)
    EQUAL           reduce using rule 57 (expression -> NAME DOT NAME .)
    NOT_EQUAL       reduce using rule 57 (expression -> NAME DOT NAME .)
    GREATER_THAN_EQUAL reduce using rule 57 (expression -> NAME DOT NAME .)
    LESS_THAN_EQUAL reduce using rule 57 (expression -> NAME DOT NAME .)
    GREATER_THAN    reduce using rule 57 (expression -> NAME DOT NAME .)
    LESS_THAN       reduce using rule 57 (expression -> NAME DOT NAME .)
    LEFT_SHIFT      reduce using rule 57 (expression -> NAME DOT NAME .)
    RIGHT_SHIFT     reduce using rule 57 (expression -> NAME DOT NAME .)
    BITWISE_OR      reduce using rule 57 (expression -> NAME DOT NAME .)
    BITWISE_AND     reduce using rule 57 (expression -> NAME DOT NAME .)
    AND             reduce using rule 57 (expression -> NAME DOT NAME .)
    OR              reduce using rule 57 (expression -> NAME DOT NAME .)
    RBRACE          reduce using rule 57 (expression -> NAME DOT NAME .)
    COMMA           reduce using rule 57 (expression -> NAME DOT NAME .)


state 103

    (36) statement -> NAME LPAREN expression_list . RPAREN SEMICOLON
    (93) expression -> NAME LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 160


state 104

    (38) statement -> NAME LPAREN RPAREN . SEMICOLON
    (95) expression -> NAME LPAREN RPAREN .

    SEMICOLON       shift and go to state 161
    LBRACKET        reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    ADD             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    SUB             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    MUL             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    DIV             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    EQUAL           reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    LESS_THAN_EQUAL reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    LESS_THAN       reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    LEFT_SHIFT      reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    RIGHT_SHIFT     reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    BITWISE_OR      reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    BITWISE_AND     reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    AND             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    OR              reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    RBRACE          reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    COMMA           reduce using rule 95 (expression -> NAME LPAREN RPAREN .)


state 105

    (37) statement -> NAME LPAREN expression . RPAREN SEMICOLON
    (94) expression -> NAME LPAREN expression . RPAREN
    (55) expression_list -> expression . COMMA expression_list
    (56) expression_list -> expression . COMMA expression
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 162
    COMMA           shift and go to state 122
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 106

    (85) statement -> NAME DPLUS SEMICOLON .

    DEF             reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    $end            reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    RPAREN          reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    RBRACE          reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    NAME            reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    LET             reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    RETURN          reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    IF              reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    FOR             reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    WHILE           reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    BREAK           reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    DPLUS           reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    DMINUS          reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    LBRACE          reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    INTEGER         reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    STRING          reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    STRING_LIT      reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    LPAREN          reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    FALSE           reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    NULL            reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    TRUE            reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    LOGICAL_NOT     reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    SUB             reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)
    ELSE            reduce using rule 85 (statement -> NAME DPLUS SEMICOLON .)


state 107

    (86) statement -> NAME DMINUS SEMICOLON .

    DEF             reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    $end            reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    RPAREN          reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    RBRACE          reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    NAME            reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    LET             reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    RETURN          reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    IF              reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    FOR             reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    WHILE           reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    BREAK           reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    DPLUS           reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    DMINUS          reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    LBRACE          reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    INTEGER         reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    STRING          reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    STRING_LIT      reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    LPAREN          reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    FALSE           reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    NULL            reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    TRUE            reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    LOGICAL_NOT     reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    SUB             reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)
    ELSE            reduce using rule 86 (statement -> NAME DMINUS SEMICOLON .)


state 108

    (96) expression -> LPAREN expression RPAREN .

    LBRACKET        reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    ADD             reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    SUB             reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    LESS_THAN_EQUAL reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    LEFT_SHIFT      reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    BITWISE_OR      reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    BITWISE_AND     reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 96 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 96 (expression -> LPAREN expression RPAREN .)


state 109

    (63) expression -> expression LBRACKET . expression RBRACKET
    (64) expression -> expression LBRACKET . I8 COLON expression RBRACKET
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    I8              shift and go to state 164
    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 163

state 110

    (57) expression -> NAME DOT . NAME
    (58) expression -> NAME DOT . NAME LPAREN expression RPAREN
    (59) expression -> NAME DOT . NAME LPAREN expression_list RPAREN
    (60) expression -> NAME DOT . NAME LPAREN RPAREN

    NAME            shift and go to state 165


state 111

    (93) expression -> NAME LPAREN . expression_list RPAREN
    (94) expression -> NAME LPAREN . expression RPAREN
    (95) expression -> NAME LPAREN . RPAREN
    (55) expression_list -> . expression COMMA expression_list
    (56) expression_list -> . expression COMMA expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    RPAREN          shift and go to state 167
    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression_list                shift and go to state 166
    expression                     shift and go to state 168

state 112

    (89) expression -> NAME DPLUS .

    RPAREN          reduce using rule 89 (expression -> NAME DPLUS .)
    LBRACKET        reduce using rule 89 (expression -> NAME DPLUS .)
    ADD             reduce using rule 89 (expression -> NAME DPLUS .)
    SUB             reduce using rule 89 (expression -> NAME DPLUS .)
    MUL             reduce using rule 89 (expression -> NAME DPLUS .)
    DIV             reduce using rule 89 (expression -> NAME DPLUS .)
    EQUAL           reduce using rule 89 (expression -> NAME DPLUS .)
    NOT_EQUAL       reduce using rule 89 (expression -> NAME DPLUS .)
    GREATER_THAN_EQUAL reduce using rule 89 (expression -> NAME DPLUS .)
    LESS_THAN_EQUAL reduce using rule 89 (expression -> NAME DPLUS .)
    GREATER_THAN    reduce using rule 89 (expression -> NAME DPLUS .)
    LESS_THAN       reduce using rule 89 (expression -> NAME DPLUS .)
    LEFT_SHIFT      reduce using rule 89 (expression -> NAME DPLUS .)
    RIGHT_SHIFT     reduce using rule 89 (expression -> NAME DPLUS .)
    BITWISE_OR      reduce using rule 89 (expression -> NAME DPLUS .)
    BITWISE_AND     reduce using rule 89 (expression -> NAME DPLUS .)
    AND             reduce using rule 89 (expression -> NAME DPLUS .)
    OR              reduce using rule 89 (expression -> NAME DPLUS .)
    SEMICOLON       reduce using rule 89 (expression -> NAME DPLUS .)
    RBRACE          reduce using rule 89 (expression -> NAME DPLUS .)
    COMMA           reduce using rule 89 (expression -> NAME DPLUS .)
    RBRACKET        reduce using rule 89 (expression -> NAME DPLUS .)


state 113

    (90) expression -> NAME DMINUS .

    RPAREN          reduce using rule 90 (expression -> NAME DMINUS .)
    LBRACKET        reduce using rule 90 (expression -> NAME DMINUS .)
    ADD             reduce using rule 90 (expression -> NAME DMINUS .)
    SUB             reduce using rule 90 (expression -> NAME DMINUS .)
    MUL             reduce using rule 90 (expression -> NAME DMINUS .)
    DIV             reduce using rule 90 (expression -> NAME DMINUS .)
    EQUAL           reduce using rule 90 (expression -> NAME DMINUS .)
    NOT_EQUAL       reduce using rule 90 (expression -> NAME DMINUS .)
    GREATER_THAN_EQUAL reduce using rule 90 (expression -> NAME DMINUS .)
    LESS_THAN_EQUAL reduce using rule 90 (expression -> NAME DMINUS .)
    GREATER_THAN    reduce using rule 90 (expression -> NAME DMINUS .)
    LESS_THAN       reduce using rule 90 (expression -> NAME DMINUS .)
    LEFT_SHIFT      reduce using rule 90 (expression -> NAME DMINUS .)
    RIGHT_SHIFT     reduce using rule 90 (expression -> NAME DMINUS .)
    BITWISE_OR      reduce using rule 90 (expression -> NAME DMINUS .)
    BITWISE_AND     reduce using rule 90 (expression -> NAME DMINUS .)
    AND             reduce using rule 90 (expression -> NAME DMINUS .)
    OR              reduce using rule 90 (expression -> NAME DMINUS .)
    SEMICOLON       reduce using rule 90 (expression -> NAME DMINUS .)
    RBRACE          reduce using rule 90 (expression -> NAME DMINUS .)
    COMMA           reduce using rule 90 (expression -> NAME DMINUS .)
    RBRACKET        reduce using rule 90 (expression -> NAME DMINUS .)


state 114

    (61) expression -> LBRACE expression . RBRACE
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression
    (55) expression_list -> expression . COMMA expression_list
    (56) expression_list -> expression . COMMA expression

    RBRACE          shift and go to state 121
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    COMMA           shift and go to state 122


state 115

    (91) expression -> DPLUS NAME .

    RPAREN          reduce using rule 91 (expression -> DPLUS NAME .)
    LBRACKET        reduce using rule 91 (expression -> DPLUS NAME .)
    ADD             reduce using rule 91 (expression -> DPLUS NAME .)
    SUB             reduce using rule 91 (expression -> DPLUS NAME .)
    MUL             reduce using rule 91 (expression -> DPLUS NAME .)
    DIV             reduce using rule 91 (expression -> DPLUS NAME .)
    EQUAL           reduce using rule 91 (expression -> DPLUS NAME .)
    NOT_EQUAL       reduce using rule 91 (expression -> DPLUS NAME .)
    GREATER_THAN_EQUAL reduce using rule 91 (expression -> DPLUS NAME .)
    LESS_THAN_EQUAL reduce using rule 91 (expression -> DPLUS NAME .)
    GREATER_THAN    reduce using rule 91 (expression -> DPLUS NAME .)
    LESS_THAN       reduce using rule 91 (expression -> DPLUS NAME .)
    LEFT_SHIFT      reduce using rule 91 (expression -> DPLUS NAME .)
    RIGHT_SHIFT     reduce using rule 91 (expression -> DPLUS NAME .)
    BITWISE_OR      reduce using rule 91 (expression -> DPLUS NAME .)
    BITWISE_AND     reduce using rule 91 (expression -> DPLUS NAME .)
    AND             reduce using rule 91 (expression -> DPLUS NAME .)
    OR              reduce using rule 91 (expression -> DPLUS NAME .)
    SEMICOLON       reduce using rule 91 (expression -> DPLUS NAME .)
    RBRACE          reduce using rule 91 (expression -> DPLUS NAME .)
    COMMA           reduce using rule 91 (expression -> DPLUS NAME .)
    RBRACKET        reduce using rule 91 (expression -> DPLUS NAME .)


state 116

    (92) expression -> DMINUS NAME .

    RPAREN          reduce using rule 92 (expression -> DMINUS NAME .)
    LBRACKET        reduce using rule 92 (expression -> DMINUS NAME .)
    ADD             reduce using rule 92 (expression -> DMINUS NAME .)
    SUB             reduce using rule 92 (expression -> DMINUS NAME .)
    MUL             reduce using rule 92 (expression -> DMINUS NAME .)
    DIV             reduce using rule 92 (expression -> DMINUS NAME .)
    EQUAL           reduce using rule 92 (expression -> DMINUS NAME .)
    NOT_EQUAL       reduce using rule 92 (expression -> DMINUS NAME .)
    GREATER_THAN_EQUAL reduce using rule 92 (expression -> DMINUS NAME .)
    LESS_THAN_EQUAL reduce using rule 92 (expression -> DMINUS NAME .)
    GREATER_THAN    reduce using rule 92 (expression -> DMINUS NAME .)
    LESS_THAN       reduce using rule 92 (expression -> DMINUS NAME .)
    LEFT_SHIFT      reduce using rule 92 (expression -> DMINUS NAME .)
    RIGHT_SHIFT     reduce using rule 92 (expression -> DMINUS NAME .)
    BITWISE_OR      reduce using rule 92 (expression -> DMINUS NAME .)
    BITWISE_AND     reduce using rule 92 (expression -> DMINUS NAME .)
    AND             reduce using rule 92 (expression -> DMINUS NAME .)
    OR              reduce using rule 92 (expression -> DMINUS NAME .)
    SEMICOLON       reduce using rule 92 (expression -> DMINUS NAME .)
    RBRACE          reduce using rule 92 (expression -> DMINUS NAME .)
    COMMA           reduce using rule 92 (expression -> DMINUS NAME .)
    RBRACKET        reduce using rule 92 (expression -> DMINUS NAME .)


state 117

    (23) statements -> statement statement .
    (22) statements -> statement . statements
    (23) statements -> statement . statement
    (22) statements -> . statement statements
    (23) statements -> . statement statement
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    RBRACE          reduce using rule 23 (statements -> statement statement .)
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statement                      shift and go to state 117
    statements                     shift and go to state 119
    expression                     shift and go to state 22

state 118

    (24) statementc -> LBRACE statement RBRACE .

    DEF             reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    $end            reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    RPAREN          reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    ELSE            reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    RBRACE          reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    NAME            reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    LET             reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    RETURN          reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    IF              reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    FOR             reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    WHILE           reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    BREAK           reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    DPLUS           reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    DMINUS          reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    LBRACE          reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    INTEGER         reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    STRING          reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    STRING_LIT      reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    LPAREN          reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    FALSE           reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    NULL            reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    TRUE            reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    LOGICAL_NOT     reduce using rule 24 (statementc -> LBRACE statement RBRACE .)
    SUB             reduce using rule 24 (statementc -> LBRACE statement RBRACE .)


state 119

    (22) statements -> statement statements .

    RBRACE          reduce using rule 22 (statements -> statement statements .)


state 120

    (25) statementc -> LBRACE statements RBRACE .

    DEF             reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    $end            reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    RPAREN          reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    NAME            reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    LET             reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    IF              reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    FOR             reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    BREAK           reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    DPLUS           reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    DMINUS          reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    LBRACE          reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    INTEGER         reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    STRING          reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    STRING_LIT      reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    FALSE           reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    NULL            reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    TRUE            reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    LOGICAL_NOT     reduce using rule 25 (statementc -> LBRACE statements RBRACE .)
    SUB             reduce using rule 25 (statementc -> LBRACE statements RBRACE .)


state 121

    (61) expression -> LBRACE expression RBRACE .

    LBRACKET        reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    ADD             reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    SUB             reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    MUL             reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    DIV             reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    EQUAL           reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    NOT_EQUAL       reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    GREATER_THAN_EQUAL reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    LESS_THAN_EQUAL reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    GREATER_THAN    reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    LESS_THAN       reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    LEFT_SHIFT      reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    RIGHT_SHIFT     reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    BITWISE_OR      reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    BITWISE_AND     reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    AND             reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    OR              reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    RPAREN          reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    RBRACE          reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    COMMA           reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    SEMICOLON       reduce using rule 61 (expression -> LBRACE expression RBRACE .)
    RBRACKET        reduce using rule 61 (expression -> LBRACE expression RBRACE .)


state 122

    (55) expression_list -> expression COMMA . expression_list
    (56) expression_list -> expression COMMA . expression
    (55) expression_list -> . expression COMMA expression_list
    (56) expression_list -> . expression COMMA expression
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 169
    expression_list                shift and go to state 170

state 123

    (62) expression -> LBRACE expression_list RBRACE .

    LBRACKET        reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    ADD             reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    SUB             reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    MUL             reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    DIV             reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    EQUAL           reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    NOT_EQUAL       reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    GREATER_THAN_EQUAL reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    LESS_THAN_EQUAL reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    GREATER_THAN    reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    LESS_THAN       reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    LEFT_SHIFT      reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    RIGHT_SHIFT     reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    BITWISE_OR      reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    BITWISE_AND     reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    AND             reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    OR              reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    RPAREN          reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    RBRACE          reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    COMMA           reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    SEMICOLON       reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)
    RBRACKET        reduce using rule 62 (expression -> LBRACE expression_list RBRACE .)


state 124

    (27) statement -> LET NAME ASSIGN . expression SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 171

state 125

    (30) statement -> LET NAME SEMICOLON .

    DEF             reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    $end            reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    RPAREN          reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    RBRACE          reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    NAME            reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    LET             reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    IF              reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    FOR             reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    BREAK           reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    DPLUS           reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    DMINUS          reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    LBRACE          reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    INTEGER         reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    STRING          reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    STRING_LIT      reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    LPAREN          reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    FALSE           reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    NULL            reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    TRUE            reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    LOGICAL_NOT     reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    SUB             reduce using rule 30 (statement -> LET NAME SEMICOLON .)
    ELSE            reduce using rule 30 (statement -> LET NAME SEMICOLON .)


state 126

    (33) statement -> expression LBRACKET expression . RBRACKET ASSIGN expression SEMICOLON
    (63) expression -> expression LBRACKET expression . RBRACKET
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RBRACKET        shift and go to state 172
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 127

    (34) statement -> expression LBRACKET I8 . COLON expression RBRACKET ASSIGN expression SEMICOLON
    (64) expression -> expression LBRACKET I8 . COLON expression RBRACKET

    COLON           shift and go to state 173


state 128

    (69) expression -> expression ADD expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 69 (expression -> expression ADD expression .)
    RBRACE          reduce using rule 69 (expression -> expression ADD expression .)
    COMMA           reduce using rule 69 (expression -> expression ADD expression .)
    SEMICOLON       reduce using rule 69 (expression -> expression ADD expression .)
    RBRACKET        reduce using rule 69 (expression -> expression ADD expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! ADD             [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! SUB             [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! MUL             [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! EQUAL           [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! NOT_EQUAL       [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! GREATER_THAN    [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! LESS_THAN       [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! BITWISE_OR      [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! BITWISE_AND     [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! AND             [ reduce using rule 69 (expression -> expression ADD expression .) ]
  ! OR              [ reduce using rule 69 (expression -> expression ADD expression .) ]


state 129

    (70) expression -> expression SUB expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 70 (expression -> expression SUB expression .)
    RBRACE          reduce using rule 70 (expression -> expression SUB expression .)
    COMMA           reduce using rule 70 (expression -> expression SUB expression .)
    SEMICOLON       reduce using rule 70 (expression -> expression SUB expression .)
    RBRACKET        reduce using rule 70 (expression -> expression SUB expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! ADD             [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! SUB             [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! MUL             [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! EQUAL           [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! NOT_EQUAL       [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! GREATER_THAN    [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! LESS_THAN       [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! BITWISE_OR      [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! BITWISE_AND     [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! AND             [ reduce using rule 70 (expression -> expression SUB expression .) ]
  ! OR              [ reduce using rule 70 (expression -> expression SUB expression .) ]


state 130

    (71) expression -> expression MUL expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 71 (expression -> expression MUL expression .)
    RBRACE          reduce using rule 71 (expression -> expression MUL expression .)
    COMMA           reduce using rule 71 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 71 (expression -> expression MUL expression .)
    RBRACKET        reduce using rule 71 (expression -> expression MUL expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! ADD             [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! SUB             [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! MUL             [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! DIV             [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! EQUAL           [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! GREATER_THAN    [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! LESS_THAN       [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! BITWISE_OR      [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! BITWISE_AND     [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! AND             [ reduce using rule 71 (expression -> expression MUL expression .) ]
  ! OR              [ reduce using rule 71 (expression -> expression MUL expression .) ]


state 131

    (72) expression -> expression DIV expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 72 (expression -> expression DIV expression .)
    RBRACE          reduce using rule 72 (expression -> expression DIV expression .)
    COMMA           reduce using rule 72 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 72 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 72 (expression -> expression DIV expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! ADD             [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! SUB             [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! MUL             [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! EQUAL           [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! NOT_EQUAL       [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! GREATER_THAN    [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! LESS_THAN       [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! BITWISE_OR      [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! BITWISE_AND     [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! AND             [ reduce using rule 72 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 72 (expression -> expression DIV expression .) ]


state 132

    (73) expression -> expression EQUAL expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 73 (expression -> expression EQUAL expression .)
    RBRACE          reduce using rule 73 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 73 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 73 (expression -> expression EQUAL expression .)
    RBRACKET        reduce using rule 73 (expression -> expression EQUAL expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! ADD             [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! SUB             [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! MUL             [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! DIV             [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! BITWISE_OR      [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! BITWISE_AND     [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 73 (expression -> expression EQUAL expression .) ]
  ! OR              [ reduce using rule 73 (expression -> expression EQUAL expression .) ]


state 133

    (74) expression -> expression NOT_EQUAL expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 74 (expression -> expression NOT_EQUAL expression .)
    RBRACE          reduce using rule 74 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 74 (expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 74 (expression -> expression NOT_EQUAL expression .)
    RBRACKET        reduce using rule 74 (expression -> expression NOT_EQUAL expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! ADD             [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! SUB             [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! MUL             [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! DIV             [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! BITWISE_OR      [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! BITWISE_AND     [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! AND             [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ reduce using rule 74 (expression -> expression NOT_EQUAL expression .) ]


state 134

    (75) expression -> expression GREATER_THAN_EQUAL expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .)
    RBRACE          reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .)
    COMMA           reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .)
    SEMICOLON       reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .)
    RBRACKET        reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! ADD             [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! SUB             [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! MUL             [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! DIV             [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! BITWISE_OR      [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! BITWISE_AND     [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! AND             [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]
  ! OR              [ reduce using rule 75 (expression -> expression GREATER_THAN_EQUAL expression .) ]


state 135

    (76) expression -> expression LESS_THAN_EQUAL expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .)
    RBRACE          reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .)
    COMMA           reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .)
    SEMICOLON       reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .)
    RBRACKET        reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! ADD             [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! SUB             [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! MUL             [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! DIV             [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! GREATER_THAN    [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! BITWISE_OR      [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! BITWISE_AND     [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! AND             [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]
  ! OR              [ reduce using rule 76 (expression -> expression LESS_THAN_EQUAL expression .) ]


state 136

    (77) expression -> expression GREATER_THAN expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 77 (expression -> expression GREATER_THAN expression .)
    RBRACE          reduce using rule 77 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 77 (expression -> expression GREATER_THAN expression .)
    SEMICOLON       reduce using rule 77 (expression -> expression GREATER_THAN expression .)
    RBRACKET        reduce using rule 77 (expression -> expression GREATER_THAN expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! ADD             [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! SUB             [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! MUL             [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! DIV             [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! EQUAL           [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! NOT_EQUAL       [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN    [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! BITWISE_OR      [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! BITWISE_AND     [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! AND             [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]
  ! OR              [ reduce using rule 77 (expression -> expression GREATER_THAN expression .) ]


state 137

    (78) expression -> expression LESS_THAN expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 78 (expression -> expression LESS_THAN expression .)
    RBRACE          reduce using rule 78 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 78 (expression -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 78 (expression -> expression LESS_THAN expression .)
    RBRACKET        reduce using rule 78 (expression -> expression LESS_THAN expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! ADD             [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! SUB             [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! MUL             [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! DIV             [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! EQUAL           [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! NOT_EQUAL       [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN    [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! BITWISE_OR      [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! BITWISE_AND     [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! AND             [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]
  ! OR              [ reduce using rule 78 (expression -> expression LESS_THAN expression .) ]


state 138

    (79) expression -> expression LEFT_SHIFT expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 79 (expression -> expression LEFT_SHIFT expression .)
    RBRACE          reduce using rule 79 (expression -> expression LEFT_SHIFT expression .)
    COMMA           reduce using rule 79 (expression -> expression LEFT_SHIFT expression .)
    SEMICOLON       reduce using rule 79 (expression -> expression LEFT_SHIFT expression .)
    RBRACKET        reduce using rule 79 (expression -> expression LEFT_SHIFT expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! ADD             [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! SUB             [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! MUL             [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! DIV             [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! EQUAL           [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! GREATER_THAN    [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! LESS_THAN       [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! BITWISE_OR      [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! BITWISE_AND     [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! AND             [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]
  ! OR              [ reduce using rule 79 (expression -> expression LEFT_SHIFT expression .) ]


state 139

    (80) expression -> expression RIGHT_SHIFT expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .)
    RBRACE          reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .)
    COMMA           reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .)
    SEMICOLON       reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .)
    RBRACKET        reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! ADD             [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! SUB             [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! MUL             [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! DIV             [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! EQUAL           [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! GREATER_THAN    [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! LESS_THAN       [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! BITWISE_OR      [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! BITWISE_AND     [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! AND             [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]
  ! OR              [ reduce using rule 80 (expression -> expression RIGHT_SHIFT expression .) ]


state 140

    (81) expression -> expression BITWISE_OR expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 81 (expression -> expression BITWISE_OR expression .)
    RBRACE          reduce using rule 81 (expression -> expression BITWISE_OR expression .)
    COMMA           reduce using rule 81 (expression -> expression BITWISE_OR expression .)
    SEMICOLON       reduce using rule 81 (expression -> expression BITWISE_OR expression .)
    RBRACKET        reduce using rule 81 (expression -> expression BITWISE_OR expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! ADD             [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! SUB             [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! MUL             [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! DIV             [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! EQUAL           [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! LESS_THAN       [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! BITWISE_OR      [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! BITWISE_AND     [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! AND             [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]
  ! OR              [ reduce using rule 81 (expression -> expression BITWISE_OR expression .) ]


state 141

    (82) expression -> expression BITWISE_AND expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 82 (expression -> expression BITWISE_AND expression .)
    RBRACE          reduce using rule 82 (expression -> expression BITWISE_AND expression .)
    COMMA           reduce using rule 82 (expression -> expression BITWISE_AND expression .)
    SEMICOLON       reduce using rule 82 (expression -> expression BITWISE_AND expression .)
    RBRACKET        reduce using rule 82 (expression -> expression BITWISE_AND expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! ADD             [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! SUB             [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! MUL             [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! DIV             [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! EQUAL           [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! LESS_THAN       [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! BITWISE_OR      [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! BITWISE_AND     [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! AND             [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]
  ! OR              [ reduce using rule 82 (expression -> expression BITWISE_AND expression .) ]


state 142

    (83) expression -> expression AND expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 83 (expression -> expression AND expression .)
    RBRACE          reduce using rule 83 (expression -> expression AND expression .)
    COMMA           reduce using rule 83 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 83 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 83 (expression -> expression AND expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! ADD             [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! SUB             [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! BITWISE_OR      [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! BITWISE_AND     [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 83 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 83 (expression -> expression AND expression .) ]


state 143

    (84) expression -> expression OR expression .
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LEFT_SHIFT resolved as shift
  ! shift/reduce conflict for RIGHT_SHIFT resolved as shift
  ! shift/reduce conflict for BITWISE_OR resolved as shift
  ! shift/reduce conflict for BITWISE_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 84 (expression -> expression OR expression .)
    RBRACE          reduce using rule 84 (expression -> expression OR expression .)
    COMMA           reduce using rule 84 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 84 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 84 (expression -> expression OR expression .)
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78

  ! LBRACKET        [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! ADD             [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! SUB             [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! LEFT_SHIFT      [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! RIGHT_SHIFT     [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! BITWISE_OR      [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! BITWISE_AND     [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 84 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 84 (expression -> expression OR expression .) ]


state 144

    (35) statement -> RETURN expression SEMICOLON .

    DEF             reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    RPAREN          reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    NAME            reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    LET             reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    DPLUS           reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    DMINUS          reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    INTEGER         reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    STRING_LIT      reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    NULL            reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    LOGICAL_NOT     reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    SUB             reduce using rule 35 (statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 35 (statement -> RETURN expression SEMICOLON .)


state 145

    (42) statement -> IF LPAREN expression . RPAREN statementc
    (43) statement -> IF LPAREN expression . RPAREN statement
    (44) statement -> IF LPAREN expression . RPAREN statementc ELSE statementc
    (45) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (46) statement -> IF LPAREN expression . RPAREN statementc ELSE statement
    (47) statement -> IF LPAREN expression . RPAREN statement ELSE statementc
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 174
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 146

    (48) statement -> FOR LPAREN statement . expression SEMICOLON statement RPAREN statementc
    (49) statement -> FOR LPAREN statement . expression SEMICOLON statement RPAREN statement
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 175

state 147

    (50) statement -> WHILE LPAREN expression . RPAREN statementc
    (51) statement -> WHILE LPAREN expression . RPAREN statement
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 176
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 148

    (87) statement -> DPLUS NAME SEMICOLON .

    DEF             reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    $end            reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    RPAREN          reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    RBRACE          reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    NAME            reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    LET             reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    RETURN          reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    IF              reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    FOR             reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    WHILE           reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    BREAK           reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    DPLUS           reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    DMINUS          reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    LBRACE          reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    INTEGER         reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    STRING          reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    STRING_LIT      reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    LPAREN          reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    FALSE           reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    NULL            reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    TRUE            reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    LOGICAL_NOT     reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    SUB             reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)
    ELSE            reduce using rule 87 (statement -> DPLUS NAME SEMICOLON .)


state 149

    (88) statement -> DMINUS NAME SEMICOLON .

    DEF             reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    $end            reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    RPAREN          reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    RBRACE          reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    NAME            reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    LET             reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    RETURN          reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    IF              reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    FOR             reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    WHILE           reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    BREAK           reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    DPLUS           reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    DMINUS          reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    LBRACE          reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    INTEGER         reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    STRING          reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    STRING_LIT      reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    LPAREN          reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    FALSE           reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    NULL            reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    TRUE            reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    LOGICAL_NOT     reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    SUB             reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)
    ELSE            reduce using rule 88 (statement -> DMINUS NAME SEMICOLON .)


state 150

    (12) function -> DEF . NAME LPAREN RPAREN statementc
    (13) function -> DEF . NAME LPAREN RPAREN statement
    (14) function -> DEF . NAME LPAREN argument RPAREN statementc
    (15) function -> DEF . NAME LPAREN argument RPAREN statement
    (16) function -> DEF . NAME LPAREN arg_list RPAREN statementc
    (17) function -> DEF . NAME LPAREN arg_list RPAREN statement

    NAME            shift and go to state 177


state 151

    (8) struct -> DEF NAME LBRACE NAME RBRACE LPAREN functions . RPAREN
    (7) functions -> functions . function
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement

    RPAREN          shift and go to state 178
    DEF             shift and go to state 150

    function                       shift and go to state 179

state 152

    (10) struct -> DEF NAME LBRACE NAME RBRACE LPAREN function . RPAREN
    (6) functions -> function . function
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement

    RPAREN          shift and go to state 181
    DEF             shift and go to state 150

    function                       shift and go to state 180

state 153

    (9) struct -> DEF NAME LBRACE name_list RBRACE LPAREN functions . RPAREN
    (7) functions -> functions . function
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement

    RPAREN          shift and go to state 182
    DEF             shift and go to state 150

    function                       shift and go to state 179

state 154

    (11) struct -> DEF NAME LBRACE name_list RBRACE LPAREN function . RPAREN
    (6) functions -> function . function
    (12) function -> . DEF NAME LPAREN RPAREN statementc
    (13) function -> . DEF NAME LPAREN RPAREN statement
    (14) function -> . DEF NAME LPAREN argument RPAREN statementc
    (15) function -> . DEF NAME LPAREN argument RPAREN statement
    (16) function -> . DEF NAME LPAREN arg_list RPAREN statementc
    (17) function -> . DEF NAME LPAREN arg_list RPAREN statement

    RPAREN          shift and go to state 183
    DEF             shift and go to state 150

    function                       shift and go to state 180

state 155

    (28) statement -> NAME NAME ASSIGN expression . SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 184
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 156

    (26) statement -> NAME AS NAME SEMICOLON .

    DEF             reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    $end            reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    RPAREN          reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    RBRACE          reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    NAME            reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    LET             reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    IF              reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    FOR             reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    BREAK           reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    DPLUS           reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    DMINUS          reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    LBRACE          reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    INTEGER         reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    STRING          reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    STRING_LIT      reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    LPAREN          reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    FALSE           reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    NULL            reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    TRUE            reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    LOGICAL_NOT     reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    SUB             reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)
    ELSE            reduce using rule 26 (statement -> NAME AS NAME SEMICOLON .)


state 157

    (31) statement -> NAME ASSIGN expression SEMICOLON .

    DEF             reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    $end            reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    RPAREN          reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    LET             reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    IF              reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    DPLUS           reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    DMINUS          reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    STRING_LIT      reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    NULL            reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    LOGICAL_NOT     reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    SUB             reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 31 (statement -> NAME ASSIGN expression SEMICOLON .)


state 158

    (32) statement -> NAME DOT NAME ASSIGN . expression SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 185

state 159

    (39) statement -> NAME DOT NAME LPAREN . expression RPAREN SEMICOLON
    (40) statement -> NAME DOT NAME LPAREN . expression_list RPAREN SEMICOLON
    (41) statement -> NAME DOT NAME LPAREN . RPAREN SEMICOLON
    (58) expression -> NAME DOT NAME LPAREN . expression RPAREN
    (59) expression -> NAME DOT NAME LPAREN . expression_list RPAREN
    (60) expression -> NAME DOT NAME LPAREN . RPAREN
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression
    (55) expression_list -> . expression COMMA expression_list
    (56) expression_list -> . expression COMMA expression

    RPAREN          shift and go to state 187
    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 186
    expression_list                shift and go to state 188

state 160

    (36) statement -> NAME LPAREN expression_list RPAREN . SEMICOLON
    (93) expression -> NAME LPAREN expression_list RPAREN .

    SEMICOLON       shift and go to state 189
    LBRACKET        reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    ADD             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    SUB             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    MUL             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    DIV             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    NOT_EQUAL       reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    LESS_THAN_EQUAL reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    GREATER_THAN    reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    LESS_THAN       reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    LEFT_SHIFT      reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    RIGHT_SHIFT     reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    BITWISE_OR      reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    BITWISE_AND     reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    AND             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    OR              reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)


state 161

    (38) statement -> NAME LPAREN RPAREN SEMICOLON .

    DEF             reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    NAME            reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    LET             reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    DPLUS           reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    DMINUS          reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    LBRACE          reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    INTEGER         reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    NULL            reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    LOGICAL_NOT     reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    SUB             reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 38 (statement -> NAME LPAREN RPAREN SEMICOLON .)


state 162

    (37) statement -> NAME LPAREN expression RPAREN . SEMICOLON
    (94) expression -> NAME LPAREN expression RPAREN .

    SEMICOLON       shift and go to state 190
    LBRACKET        reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    ADD             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    SUB             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    MUL             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    DIV             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    EQUAL           reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    LESS_THAN_EQUAL reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    LEFT_SHIFT      reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    BITWISE_OR      reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    BITWISE_AND     reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    AND             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    OR              reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    RBRACE          reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)


state 163

    (63) expression -> expression LBRACKET expression . RBRACKET
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RBRACKET        shift and go to state 191
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 164

    (64) expression -> expression LBRACKET I8 . COLON expression RBRACKET

    COLON           shift and go to state 192


state 165

    (57) expression -> NAME DOT NAME .
    (58) expression -> NAME DOT NAME . LPAREN expression RPAREN
    (59) expression -> NAME DOT NAME . LPAREN expression_list RPAREN
    (60) expression -> NAME DOT NAME . LPAREN RPAREN

    RPAREN          reduce using rule 57 (expression -> NAME DOT NAME .)
    LBRACKET        reduce using rule 57 (expression -> NAME DOT NAME .)
    ADD             reduce using rule 57 (expression -> NAME DOT NAME .)
    SUB             reduce using rule 57 (expression -> NAME DOT NAME .)
    MUL             reduce using rule 57 (expression -> NAME DOT NAME .)
    DIV             reduce using rule 57 (expression -> NAME DOT NAME .)
    EQUAL           reduce using rule 57 (expression -> NAME DOT NAME .)
    NOT_EQUAL       reduce using rule 57 (expression -> NAME DOT NAME .)
    GREATER_THAN_EQUAL reduce using rule 57 (expression -> NAME DOT NAME .)
    LESS_THAN_EQUAL reduce using rule 57 (expression -> NAME DOT NAME .)
    GREATER_THAN    reduce using rule 57 (expression -> NAME DOT NAME .)
    LESS_THAN       reduce using rule 57 (expression -> NAME DOT NAME .)
    LEFT_SHIFT      reduce using rule 57 (expression -> NAME DOT NAME .)
    RIGHT_SHIFT     reduce using rule 57 (expression -> NAME DOT NAME .)
    BITWISE_OR      reduce using rule 57 (expression -> NAME DOT NAME .)
    BITWISE_AND     reduce using rule 57 (expression -> NAME DOT NAME .)
    AND             reduce using rule 57 (expression -> NAME DOT NAME .)
    OR              reduce using rule 57 (expression -> NAME DOT NAME .)
    SEMICOLON       reduce using rule 57 (expression -> NAME DOT NAME .)
    RBRACE          reduce using rule 57 (expression -> NAME DOT NAME .)
    COMMA           reduce using rule 57 (expression -> NAME DOT NAME .)
    RBRACKET        reduce using rule 57 (expression -> NAME DOT NAME .)
    LPAREN          shift and go to state 193


state 166

    (93) expression -> NAME LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 194


state 167

    (95) expression -> NAME LPAREN RPAREN .

    RPAREN          reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    LBRACKET        reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    ADD             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    SUB             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    MUL             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    DIV             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    EQUAL           reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    LESS_THAN_EQUAL reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    LESS_THAN       reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    LEFT_SHIFT      reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    RIGHT_SHIFT     reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    BITWISE_OR      reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    BITWISE_AND     reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    AND             reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    OR              reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    SEMICOLON       reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    RBRACE          reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    COMMA           reduce using rule 95 (expression -> NAME LPAREN RPAREN .)
    RBRACKET        reduce using rule 95 (expression -> NAME LPAREN RPAREN .)


state 168

    (94) expression -> NAME LPAREN expression . RPAREN
    (55) expression_list -> expression . COMMA expression_list
    (56) expression_list -> expression . COMMA expression
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RPAREN          shift and go to state 195
    COMMA           shift and go to state 122
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 169

    (56) expression_list -> expression COMMA expression .
    (55) expression_list -> expression . COMMA expression_list
    (56) expression_list -> expression . COMMA expression
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RBRACE          reduce using rule 56 (expression_list -> expression COMMA expression .)
    RPAREN          reduce using rule 56 (expression_list -> expression COMMA expression .)
    COMMA           shift and go to state 122
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 170

    (55) expression_list -> expression COMMA expression_list .

    RBRACE          reduce using rule 55 (expression_list -> expression COMMA expression_list .)
    RPAREN          reduce using rule 55 (expression_list -> expression COMMA expression_list .)


state 171

    (27) statement -> LET NAME ASSIGN expression . SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 196
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 172

    (33) statement -> expression LBRACKET expression RBRACKET . ASSIGN expression SEMICOLON
    (63) expression -> expression LBRACKET expression RBRACKET .

    ASSIGN          shift and go to state 197
    LBRACKET        reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    ADD             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    SUB             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MUL             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    DIV             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    NOT_EQUAL       reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    GREATER_THAN_EQUAL reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN_EQUAL reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LEFT_SHIFT      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    BITWISE_OR      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    BITWISE_AND     reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)


state 173

    (34) statement -> expression LBRACKET I8 COLON . expression RBRACKET ASSIGN expression SEMICOLON
    (64) expression -> expression LBRACKET I8 COLON . expression RBRACKET
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 198

state 174

    (42) statement -> IF LPAREN expression RPAREN . statementc
    (43) statement -> IF LPAREN expression RPAREN . statement
    (44) statement -> IF LPAREN expression RPAREN . statementc ELSE statementc
    (45) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (46) statement -> IF LPAREN expression RPAREN . statementc ELSE statement
    (47) statement -> IF LPAREN expression RPAREN . statement ELSE statementc
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    LBRACE          shift and go to state 20
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 22
    statementc                     shift and go to state 199
    statement                      shift and go to state 200

state 175

    (48) statement -> FOR LPAREN statement expression . SEMICOLON statement RPAREN statementc
    (49) statement -> FOR LPAREN statement expression . SEMICOLON statement RPAREN statement
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 201
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 176

    (50) statement -> WHILE LPAREN expression RPAREN . statementc
    (51) statement -> WHILE LPAREN expression RPAREN . statement
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    LBRACE          shift and go to state 20
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 22
    statementc                     shift and go to state 202
    statement                      shift and go to state 203

state 177

    (12) function -> DEF NAME . LPAREN RPAREN statementc
    (13) function -> DEF NAME . LPAREN RPAREN statement
    (14) function -> DEF NAME . LPAREN argument RPAREN statementc
    (15) function -> DEF NAME . LPAREN argument RPAREN statement
    (16) function -> DEF NAME . LPAREN arg_list RPAREN statementc
    (17) function -> DEF NAME . LPAREN arg_list RPAREN statement

    LPAREN          shift and go to state 7


state 178

    (8) struct -> DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN .

    DEF             reduce using rule 8 (struct -> DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN .)
    $end            reduce using rule 8 (struct -> DEF NAME LBRACE NAME RBRACE LPAREN functions RPAREN .)


state 179

    (7) functions -> functions function .

    RPAREN          reduce using rule 7 (functions -> functions function .)
    DEF             reduce using rule 7 (functions -> functions function .)


state 180

    (6) functions -> function function .

    RPAREN          reduce using rule 6 (functions -> function function .)
    DEF             reduce using rule 6 (functions -> function function .)


state 181

    (10) struct -> DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN .

    DEF             reduce using rule 10 (struct -> DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN .)
    $end            reduce using rule 10 (struct -> DEF NAME LBRACE NAME RBRACE LPAREN function RPAREN .)


state 182

    (9) struct -> DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN .

    DEF             reduce using rule 9 (struct -> DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN .)
    $end            reduce using rule 9 (struct -> DEF NAME LBRACE name_list RBRACE LPAREN functions RPAREN .)


state 183

    (11) struct -> DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN .

    DEF             reduce using rule 11 (struct -> DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN .)
    $end            reduce using rule 11 (struct -> DEF NAME LBRACE name_list RBRACE LPAREN function RPAREN .)


state 184

    (28) statement -> NAME NAME ASSIGN expression SEMICOLON .

    DEF             reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    $end            reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    RPAREN          reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    LET             reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    IF              reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    DPLUS           reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    DMINUS          reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    STRING_LIT      reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    NULL            reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    LOGICAL_NOT     reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    SUB             reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 28 (statement -> NAME NAME ASSIGN expression SEMICOLON .)


state 185

    (32) statement -> NAME DOT NAME ASSIGN expression . SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 204
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 186

    (39) statement -> NAME DOT NAME LPAREN expression . RPAREN SEMICOLON
    (58) expression -> NAME DOT NAME LPAREN expression . RPAREN
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression
    (55) expression_list -> expression . COMMA expression_list
    (56) expression_list -> expression . COMMA expression

    RPAREN          shift and go to state 205
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    COMMA           shift and go to state 122


state 187

    (41) statement -> NAME DOT NAME LPAREN RPAREN . SEMICOLON
    (60) expression -> NAME DOT NAME LPAREN RPAREN .

    SEMICOLON       shift and go to state 206
    LBRACKET        reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    ADD             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    SUB             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    MUL             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    DIV             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    EQUAL           reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LESS_THAN_EQUAL reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LESS_THAN       reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LEFT_SHIFT      reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    RIGHT_SHIFT     reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    BITWISE_OR      reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    BITWISE_AND     reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    AND             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    OR              reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    RBRACE          reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    COMMA           reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)


state 188

    (40) statement -> NAME DOT NAME LPAREN expression_list . RPAREN SEMICOLON
    (59) expression -> NAME DOT NAME LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 207


state 189

    (36) statement -> NAME LPAREN expression_list RPAREN SEMICOLON .

    DEF             reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    $end            reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    NAME            reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    LET             reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    BREAK           reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    DPLUS           reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    DMINUS          reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    INTEGER         reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    STRING          reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    FALSE           reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    NULL            reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    TRUE            reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    LOGICAL_NOT     reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    SUB             reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 36 (statement -> NAME LPAREN expression_list RPAREN SEMICOLON .)


state 190

    (37) statement -> NAME LPAREN expression RPAREN SEMICOLON .

    DEF             reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    NAME            reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    LET             reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    DPLUS           reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    DMINUS          reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    NULL            reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    LOGICAL_NOT     reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    SUB             reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 37 (statement -> NAME LPAREN expression RPAREN SEMICOLON .)


state 191

    (63) expression -> expression LBRACKET expression RBRACKET .

    RPAREN          reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    ADD             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    SUB             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MUL             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    DIV             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    NOT_EQUAL       reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    GREATER_THAN_EQUAL reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN_EQUAL reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LEFT_SHIFT      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    BITWISE_OR      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    BITWISE_AND     reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)


state 192

    (64) expression -> expression LBRACKET I8 COLON . expression RBRACKET
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 208

state 193

    (58) expression -> NAME DOT NAME LPAREN . expression RPAREN
    (59) expression -> NAME DOT NAME LPAREN . expression_list RPAREN
    (60) expression -> NAME DOT NAME LPAREN . RPAREN
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression
    (55) expression_list -> . expression COMMA expression_list
    (56) expression_list -> . expression COMMA expression

    RPAREN          shift and go to state 210
    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 209
    expression_list                shift and go to state 211

state 194

    (93) expression -> NAME LPAREN expression_list RPAREN .

    RPAREN          reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    LBRACKET        reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    ADD             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    SUB             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    MUL             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    DIV             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    NOT_EQUAL       reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    LESS_THAN_EQUAL reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    GREATER_THAN    reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    LESS_THAN       reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    LEFT_SHIFT      reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    RIGHT_SHIFT     reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    BITWISE_OR      reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    BITWISE_AND     reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    AND             reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    OR              reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 93 (expression -> NAME LPAREN expression_list RPAREN .)


state 195

    (94) expression -> NAME LPAREN expression RPAREN .

    RPAREN          reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    ADD             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    SUB             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    MUL             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    DIV             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    EQUAL           reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    LESS_THAN_EQUAL reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    LEFT_SHIFT      reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    BITWISE_OR      reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    BITWISE_AND     reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    AND             reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    OR              reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    RBRACE          reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 94 (expression -> NAME LPAREN expression RPAREN .)


state 196

    (27) statement -> LET NAME ASSIGN expression SEMICOLON .

    DEF             reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    $end            reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    RPAREN          reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    LET             reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    IF              reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    DPLUS           reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    DMINUS          reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    STRING_LIT      reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    NULL            reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    LOGICAL_NOT     reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    SUB             reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 27 (statement -> LET NAME ASSIGN expression SEMICOLON .)


state 197

    (33) statement -> expression LBRACKET expression RBRACKET ASSIGN . expression SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 212

state 198

    (34) statement -> expression LBRACKET I8 COLON expression . RBRACKET ASSIGN expression SEMICOLON
    (64) expression -> expression LBRACKET I8 COLON expression . RBRACKET
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RBRACKET        shift and go to state 213
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 199

    (42) statement -> IF LPAREN expression RPAREN statementc .
    (44) statement -> IF LPAREN expression RPAREN statementc . ELSE statementc
    (46) statement -> IF LPAREN expression RPAREN statementc . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    $end            reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    RPAREN          reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    RBRACE          reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    NAME            reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    LET             reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    RETURN          reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    IF              reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    FOR             reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    WHILE           reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    BREAK           reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    DPLUS           reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    DMINUS          reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    LBRACE          reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    INTEGER         reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    STRING          reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    STRING_LIT      reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    LPAREN          reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    FALSE           reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    NULL            reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    TRUE            reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    LOGICAL_NOT     reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    SUB             reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .)
    ELSE            shift and go to state 214

  ! ELSE            [ reduce using rule 42 (statement -> IF LPAREN expression RPAREN statementc .) ]


state 200

    (43) statement -> IF LPAREN expression RPAREN statement .
    (45) statement -> IF LPAREN expression RPAREN statement . ELSE statement
    (47) statement -> IF LPAREN expression RPAREN statement . ELSE statementc

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    RPAREN          reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    NAME            reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    LET             reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    DPLUS           reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    DMINUS          reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    INTEGER         reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    STRING_LIT      reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    NULL            reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    LOGICAL_NOT     reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    SUB             reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 215

  ! ELSE            [ reduce using rule 43 (statement -> IF LPAREN expression RPAREN statement .) ]


state 201

    (48) statement -> FOR LPAREN statement expression SEMICOLON . statement RPAREN statementc
    (49) statement -> FOR LPAREN statement expression SEMICOLON . statement RPAREN statement
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statement                      shift and go to state 216
    expression                     shift and go to state 22

state 202

    (50) statement -> WHILE LPAREN expression RPAREN statementc .

    DEF             reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    $end            reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    RPAREN          reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    RBRACE          reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    NAME            reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    LET             reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    RETURN          reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    IF              reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    FOR             reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    WHILE           reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    BREAK           reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    DPLUS           reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    DMINUS          reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    LBRACE          reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    INTEGER         reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    STRING          reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    STRING_LIT      reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    LPAREN          reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    FALSE           reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    NULL            reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    TRUE            reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    LOGICAL_NOT     reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    SUB             reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)
    ELSE            reduce using rule 50 (statement -> WHILE LPAREN expression RPAREN statementc .)


state 203

    (51) statement -> WHILE LPAREN expression RPAREN statement .

    DEF             reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    RPAREN          reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    NAME            reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    LET             reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    DPLUS           reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    DMINUS          reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    INTEGER         reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    STRING_LIT      reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    NULL            reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    LOGICAL_NOT     reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    SUB             reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 51 (statement -> WHILE LPAREN expression RPAREN statement .)


state 204

    (32) statement -> NAME DOT NAME ASSIGN expression SEMICOLON .

    DEF             reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    $end            reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    RPAREN          reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    LET             reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    IF              reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    DPLUS           reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    DMINUS          reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    STRING_LIT      reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    NULL            reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    LOGICAL_NOT     reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    SUB             reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 32 (statement -> NAME DOT NAME ASSIGN expression SEMICOLON .)


state 205

    (39) statement -> NAME DOT NAME LPAREN expression RPAREN . SEMICOLON
    (58) expression -> NAME DOT NAME LPAREN expression RPAREN .

    SEMICOLON       shift and go to state 217
    LBRACKET        reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    ADD             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    SUB             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    MUL             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    DIV             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    EQUAL           reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    LESS_THAN_EQUAL reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    LEFT_SHIFT      reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    BITWISE_OR      reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    BITWISE_AND     reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    AND             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    OR              reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    RBRACE          reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)


state 206

    (41) statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .

    DEF             reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    NAME            reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    LET             reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    DPLUS           reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    DMINUS          reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    LBRACE          reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    INTEGER         reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    NULL            reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    LOGICAL_NOT     reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    SUB             reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 41 (statement -> NAME DOT NAME LPAREN RPAREN SEMICOLON .)


state 207

    (40) statement -> NAME DOT NAME LPAREN expression_list RPAREN . SEMICOLON
    (59) expression -> NAME DOT NAME LPAREN expression_list RPAREN .

    SEMICOLON       shift and go to state 218
    LBRACKET        reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    ADD             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    SUB             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    MUL             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    DIV             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    NOT_EQUAL       reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    LESS_THAN_EQUAL reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    GREATER_THAN    reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    LESS_THAN       reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    LEFT_SHIFT      reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    RIGHT_SHIFT     reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    BITWISE_OR      reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    BITWISE_AND     reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    AND             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    OR              reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)


state 208

    (64) expression -> expression LBRACKET I8 COLON expression . RBRACKET
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    RBRACKET        shift and go to state 219
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 209

    (58) expression -> NAME DOT NAME LPAREN expression . RPAREN
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression
    (55) expression_list -> expression . COMMA expression_list
    (56) expression_list -> expression . COMMA expression

    RPAREN          shift and go to state 220
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78
    COMMA           shift and go to state 122


state 210

    (60) expression -> NAME DOT NAME LPAREN RPAREN .

    RPAREN          reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LBRACKET        reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    ADD             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    SUB             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    MUL             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    DIV             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    EQUAL           reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LESS_THAN_EQUAL reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LESS_THAN       reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    LEFT_SHIFT      reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    RIGHT_SHIFT     reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    BITWISE_OR      reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    BITWISE_AND     reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    AND             reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    OR              reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    SEMICOLON       reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    RBRACE          reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    COMMA           reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)
    RBRACKET        reduce using rule 60 (expression -> NAME DOT NAME LPAREN RPAREN .)


state 211

    (59) expression -> NAME DOT NAME LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 221


state 212

    (33) statement -> expression LBRACKET expression RBRACKET ASSIGN expression . SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 222
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 213

    (34) statement -> expression LBRACKET I8 COLON expression RBRACKET . ASSIGN expression SEMICOLON
    (64) expression -> expression LBRACKET I8 COLON expression RBRACKET .

    ASSIGN          shift and go to state 223
    LBRACKET        reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    ADD             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    SUB             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    MUL             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    DIV             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    EQUAL           reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    NOT_EQUAL       reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    GREATER_THAN_EQUAL reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    LESS_THAN_EQUAL reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    GREATER_THAN    reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    LESS_THAN       reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    LEFT_SHIFT      reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    BITWISE_OR      reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    BITWISE_AND     reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    AND             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    OR              reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    RBRACE          reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    COMMA           reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)


state 214

    (44) statement -> IF LPAREN expression RPAREN statementc ELSE . statementc
    (46) statement -> IF LPAREN expression RPAREN statementc ELSE . statement
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    LBRACE          shift and go to state 20
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 22
    statementc                     shift and go to state 224
    statement                      shift and go to state 225

state 215

    (45) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (47) statement -> IF LPAREN expression RPAREN statement ELSE . statementc
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    LBRACE          shift and go to state 20
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 22
    statement                      shift and go to state 226
    statementc                     shift and go to state 227

state 216

    (48) statement -> FOR LPAREN statement expression SEMICOLON statement . RPAREN statementc
    (49) statement -> FOR LPAREN statement expression SEMICOLON statement . RPAREN statement

    RPAREN          shift and go to state 228


state 217

    (39) statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .

    DEF             reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    NAME            reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    LET             reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    DPLUS           reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    DMINUS          reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    NULL            reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    LOGICAL_NOT     reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    SUB             reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 39 (statement -> NAME DOT NAME LPAREN expression RPAREN SEMICOLON .)


state 218

    (40) statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .

    DEF             reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    $end            reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    RPAREN          reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    NAME            reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    LET             reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    BREAK           reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    DPLUS           reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    DMINUS          reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    INTEGER         reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    STRING          reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    FALSE           reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    NULL            reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    TRUE            reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    LOGICAL_NOT     reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    SUB             reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 40 (statement -> NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON .)


state 219

    (64) expression -> expression LBRACKET I8 COLON expression RBRACKET .

    RPAREN          reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    LBRACKET        reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    ADD             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    SUB             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    MUL             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    DIV             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    EQUAL           reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    NOT_EQUAL       reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    GREATER_THAN_EQUAL reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    LESS_THAN_EQUAL reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    GREATER_THAN    reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    LESS_THAN       reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    LEFT_SHIFT      reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    BITWISE_OR      reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    BITWISE_AND     reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    AND             reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    OR              reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    SEMICOLON       reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    RBRACE          reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    COMMA           reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)
    RBRACKET        reduce using rule 64 (expression -> expression LBRACKET I8 COLON expression RBRACKET .)


state 220

    (58) expression -> NAME DOT NAME LPAREN expression RPAREN .

    RPAREN          reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    ADD             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    SUB             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    MUL             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    DIV             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    EQUAL           reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    LESS_THAN_EQUAL reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    LEFT_SHIFT      reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    BITWISE_OR      reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    BITWISE_AND     reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    AND             reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    OR              reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    RBRACE          reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 58 (expression -> NAME DOT NAME LPAREN expression RPAREN .)


state 221

    (59) expression -> NAME DOT NAME LPAREN expression_list RPAREN .

    RPAREN          reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    LBRACKET        reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    ADD             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    SUB             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    MUL             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    DIV             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    NOT_EQUAL       reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    GREATER_THAN_EQUAL reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    LESS_THAN_EQUAL reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    GREATER_THAN    reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    LESS_THAN       reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    LEFT_SHIFT      reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    RIGHT_SHIFT     reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    BITWISE_OR      reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    BITWISE_AND     reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    AND             reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    OR              reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 59 (expression -> NAME DOT NAME LPAREN expression_list RPAREN .)


state 222

    (33) statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .

    DEF             reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RPAREN          reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    LET             reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    DPLUS           reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    DMINUS          reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    STRING_LIT      reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    NULL            reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    LOGICAL_NOT     reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    SUB             reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 33 (statement -> expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON .)


state 223

    (34) statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN . expression SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    NAME            shift and go to state 53
    LBRACE          shift and go to state 54
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    DPLUS           shift and go to state 55
    DMINUS          shift and go to state 56
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    expression                     shift and go to state 229

state 224

    (44) statement -> IF LPAREN expression RPAREN statementc ELSE statementc .

    DEF             reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    $end            reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    RPAREN          reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    RBRACE          reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    NAME            reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    LET             reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    RETURN          reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    IF              reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    FOR             reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    WHILE           reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    BREAK           reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    DPLUS           reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    DMINUS          reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    LBRACE          reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    INTEGER         reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    STRING          reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    STRING_LIT      reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    LPAREN          reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    FALSE           reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    NULL            reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    TRUE            reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    LOGICAL_NOT     reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    SUB             reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)
    ELSE            reduce using rule 44 (statement -> IF LPAREN expression RPAREN statementc ELSE statementc .)


state 225

    (46) statement -> IF LPAREN expression RPAREN statementc ELSE statement .

    DEF             reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    $end            reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    RPAREN          reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    RBRACE          reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    NAME            reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    LET             reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    RETURN          reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    IF              reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    FOR             reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    WHILE           reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    BREAK           reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    DPLUS           reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    DMINUS          reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    LBRACE          reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    INTEGER         reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    STRING          reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    STRING_LIT      reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    LPAREN          reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    FALSE           reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    NULL            reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    TRUE            reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    LOGICAL_NOT     reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    SUB             reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)
    ELSE            reduce using rule 46 (statement -> IF LPAREN expression RPAREN statementc ELSE statement .)


state 226

    (45) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    DEF             reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RPAREN          reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NAME            reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LET             reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BREAK           reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DPLUS           reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DMINUS          reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INTEGER         reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING_LIT      reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FALSE           reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NULL            reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TRUE            reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LOGICAL_NOT     reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SUB             reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 45 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 227

    (47) statement -> IF LPAREN expression RPAREN statement ELSE statementc .

    DEF             reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    $end            reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    RPAREN          reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    RBRACE          reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    NAME            reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    LET             reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    RETURN          reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    IF              reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    FOR             reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    WHILE           reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    BREAK           reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    DPLUS           reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    DMINUS          reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    LBRACE          reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    INTEGER         reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    STRING          reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    STRING_LIT      reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    LPAREN          reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    FALSE           reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    NULL            reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    TRUE            reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    LOGICAL_NOT     reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    SUB             reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)
    ELSE            reduce using rule 47 (statement -> IF LPAREN expression RPAREN statement ELSE statementc .)


state 228

    (48) statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN . statementc
    (49) statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN . statement
    (24) statementc -> . LBRACE statement RBRACE
    (25) statementc -> . LBRACE statements RBRACE
    (26) statement -> . NAME AS NAME SEMICOLON
    (27) statement -> . LET NAME ASSIGN expression SEMICOLON
    (28) statement -> . NAME NAME ASSIGN expression SEMICOLON
    (29) statement -> . NAME NAME SEMICOLON
    (30) statement -> . LET NAME SEMICOLON
    (31) statement -> . NAME ASSIGN expression SEMICOLON
    (32) statement -> . NAME DOT NAME ASSIGN expression SEMICOLON
    (33) statement -> . expression LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
    (34) statement -> . expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON
    (35) statement -> . RETURN expression SEMICOLON
    (36) statement -> . NAME LPAREN expression_list RPAREN SEMICOLON
    (37) statement -> . NAME LPAREN expression RPAREN SEMICOLON
    (38) statement -> . NAME LPAREN RPAREN SEMICOLON
    (39) statement -> . NAME DOT NAME LPAREN expression RPAREN SEMICOLON
    (40) statement -> . NAME DOT NAME LPAREN expression_list RPAREN SEMICOLON
    (41) statement -> . NAME DOT NAME LPAREN RPAREN SEMICOLON
    (42) statement -> . IF LPAREN expression RPAREN statementc
    (43) statement -> . IF LPAREN expression RPAREN statement
    (44) statement -> . IF LPAREN expression RPAREN statementc ELSE statementc
    (45) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (46) statement -> . IF LPAREN expression RPAREN statementc ELSE statement
    (47) statement -> . IF LPAREN expression RPAREN statement ELSE statementc
    (48) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statementc
    (49) statement -> . FOR LPAREN statement expression SEMICOLON statement RPAREN statement
    (50) statement -> . WHILE LPAREN expression RPAREN statementc
    (51) statement -> . WHILE LPAREN expression RPAREN statement
    (52) statement -> . BREAK SEMICOLON
    (85) statement -> . NAME DPLUS SEMICOLON
    (86) statement -> . NAME DMINUS SEMICOLON
    (87) statement -> . DPLUS NAME SEMICOLON
    (88) statement -> . DMINUS NAME SEMICOLON
    (57) expression -> . NAME DOT NAME
    (58) expression -> . NAME DOT NAME LPAREN expression RPAREN
    (59) expression -> . NAME DOT NAME LPAREN expression_list RPAREN
    (60) expression -> . NAME DOT NAME LPAREN RPAREN
    (61) expression -> . LBRACE expression RBRACE
    (62) expression -> . LBRACE expression_list RBRACE
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . expression LBRACKET I8 COLON expression RBRACKET
    (65) expression -> . INTEGER
    (66) expression -> . NAME
    (67) expression -> . STRING
    (68) expression -> . STRING_LIT
    (69) expression -> . expression ADD expression
    (70) expression -> . expression SUB expression
    (71) expression -> . expression MUL expression
    (72) expression -> . expression DIV expression
    (73) expression -> . expression EQUAL expression
    (74) expression -> . expression NOT_EQUAL expression
    (75) expression -> . expression GREATER_THAN_EQUAL expression
    (76) expression -> . expression LESS_THAN_EQUAL expression
    (77) expression -> . expression GREATER_THAN expression
    (78) expression -> . expression LESS_THAN expression
    (79) expression -> . expression LEFT_SHIFT expression
    (80) expression -> . expression RIGHT_SHIFT expression
    (81) expression -> . expression BITWISE_OR expression
    (82) expression -> . expression BITWISE_AND expression
    (83) expression -> . expression AND expression
    (84) expression -> . expression OR expression
    (89) expression -> . NAME DPLUS
    (90) expression -> . NAME DMINUS
    (91) expression -> . DPLUS NAME
    (92) expression -> . DMINUS NAME
    (93) expression -> . NAME LPAREN expression_list RPAREN
    (94) expression -> . NAME LPAREN expression RPAREN
    (95) expression -> . NAME LPAREN RPAREN
    (96) expression -> . LPAREN expression RPAREN
    (97) expression -> . FALSE
    (98) expression -> . NULL
    (99) expression -> . TRUE
    (100) expression -> . LOGICAL_NOT expression
    (101) expression -> . SUB expression

    LBRACE          shift and go to state 20
    NAME            shift and go to state 16
    LET             shift and go to state 21
    RETURN          shift and go to state 23
    IF              shift and go to state 24
    FOR             shift and go to state 25
    WHILE           shift and go to state 26
    BREAK           shift and go to state 27
    DPLUS           shift and go to state 28
    DMINUS          shift and go to state 29
    INTEGER         shift and go to state 30
    STRING          shift and go to state 31
    STRING_LIT      shift and go to state 32
    LPAREN          shift and go to state 17
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TRUE            shift and go to state 36
    LOGICAL_NOT     shift and go to state 37
    SUB             shift and go to state 33

    statement                      shift and go to state 230
    expression                     shift and go to state 22
    statementc                     shift and go to state 231

state 229

    (34) statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression . SEMICOLON
    (63) expression -> expression . LBRACKET expression RBRACKET
    (64) expression -> expression . LBRACKET I8 COLON expression RBRACKET
    (69) expression -> expression . ADD expression
    (70) expression -> expression . SUB expression
    (71) expression -> expression . MUL expression
    (72) expression -> expression . DIV expression
    (73) expression -> expression . EQUAL expression
    (74) expression -> expression . NOT_EQUAL expression
    (75) expression -> expression . GREATER_THAN_EQUAL expression
    (76) expression -> expression . LESS_THAN_EQUAL expression
    (77) expression -> expression . GREATER_THAN expression
    (78) expression -> expression . LESS_THAN expression
    (79) expression -> expression . LEFT_SHIFT expression
    (80) expression -> expression . RIGHT_SHIFT expression
    (81) expression -> expression . BITWISE_OR expression
    (82) expression -> expression . BITWISE_AND expression
    (83) expression -> expression . AND expression
    (84) expression -> expression . OR expression

    SEMICOLON       shift and go to state 232
    LBRACKET        shift and go to state 109
    ADD             shift and go to state 63
    SUB             shift and go to state 64
    MUL             shift and go to state 65
    DIV             shift and go to state 66
    EQUAL           shift and go to state 67
    NOT_EQUAL       shift and go to state 68
    GREATER_THAN_EQUAL shift and go to state 69
    LESS_THAN_EQUAL shift and go to state 70
    GREATER_THAN    shift and go to state 71
    LESS_THAN       shift and go to state 72
    LEFT_SHIFT      shift and go to state 73
    RIGHT_SHIFT     shift and go to state 74
    BITWISE_OR      shift and go to state 75
    BITWISE_AND     shift and go to state 76
    AND             shift and go to state 77
    OR              shift and go to state 78


state 230

    (49) statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .

    DEF             reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    $end            reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    RPAREN          reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    RBRACE          reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    NAME            reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    LET             reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    RETURN          reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    IF              reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    FOR             reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    WHILE           reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    BREAK           reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    DPLUS           reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    DMINUS          reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    LBRACE          reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    INTEGER         reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    STRING          reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    STRING_LIT      reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    LPAREN          reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    FALSE           reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    NULL            reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    TRUE            reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    LOGICAL_NOT     reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    SUB             reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)
    ELSE            reduce using rule 49 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statement .)


state 231

    (48) statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .

    DEF             reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    $end            reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    RPAREN          reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    RBRACE          reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    NAME            reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    LET             reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    RETURN          reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    IF              reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    FOR             reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    WHILE           reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    BREAK           reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    DPLUS           reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    DMINUS          reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    LBRACE          reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    INTEGER         reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    STRING          reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    STRING_LIT      reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    LPAREN          reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    FALSE           reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    NULL            reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    TRUE            reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    LOGICAL_NOT     reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    SUB             reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)
    ELSE            reduce using rule 48 (statement -> FOR LPAREN statement expression SEMICOLON statement RPAREN statementc .)


state 232

    (34) statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .

    DEF             reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    RPAREN          reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    NAME            reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    LET             reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    BREAK           reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    DPLUS           reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    DMINUS          reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    INTEGER         reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    STRING_LIT      reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    NULL            reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    LOGICAL_NOT     reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    SUB             reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 34 (statement -> expression LBRACKET I8 COLON expression RBRACKET ASSIGN expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DEF in state 5 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 86 resolved as shift
WARNING: shift/reduce conflict for ADD in state 86 resolved as shift
WARNING: shift/reduce conflict for SUB in state 86 resolved as shift
WARNING: shift/reduce conflict for MUL in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV in state 86 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 86 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 86 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 86 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 86 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 86 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 86 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 87 resolved as shift
WARNING: shift/reduce conflict for ADD in state 87 resolved as shift
WARNING: shift/reduce conflict for SUB in state 87 resolved as shift
WARNING: shift/reduce conflict for MUL in state 87 resolved as shift
WARNING: shift/reduce conflict for DIV in state 87 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 87 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 87 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 87 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 87 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 87 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 128 resolved as shift
WARNING: shift/reduce conflict for ADD in state 128 resolved as shift
WARNING: shift/reduce conflict for SUB in state 128 resolved as shift
WARNING: shift/reduce conflict for MUL in state 128 resolved as shift
WARNING: shift/reduce conflict for DIV in state 128 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 128 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 128 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 128 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 128 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 128 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 128 resolved as shift
WARNING: shift/reduce conflict for AND in state 128 resolved as shift
WARNING: shift/reduce conflict for OR in state 128 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 129 resolved as shift
WARNING: shift/reduce conflict for ADD in state 129 resolved as shift
WARNING: shift/reduce conflict for SUB in state 129 resolved as shift
WARNING: shift/reduce conflict for MUL in state 129 resolved as shift
WARNING: shift/reduce conflict for DIV in state 129 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 129 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 129 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 129 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 129 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 129 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 129 resolved as shift
WARNING: shift/reduce conflict for AND in state 129 resolved as shift
WARNING: shift/reduce conflict for OR in state 129 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 130 resolved as shift
WARNING: shift/reduce conflict for ADD in state 130 resolved as shift
WARNING: shift/reduce conflict for SUB in state 130 resolved as shift
WARNING: shift/reduce conflict for MUL in state 130 resolved as shift
WARNING: shift/reduce conflict for DIV in state 130 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 130 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 130 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 130 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 130 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 130 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 130 resolved as shift
WARNING: shift/reduce conflict for AND in state 130 resolved as shift
WARNING: shift/reduce conflict for OR in state 130 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 131 resolved as shift
WARNING: shift/reduce conflict for ADD in state 131 resolved as shift
WARNING: shift/reduce conflict for SUB in state 131 resolved as shift
WARNING: shift/reduce conflict for MUL in state 131 resolved as shift
WARNING: shift/reduce conflict for DIV in state 131 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 131 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 131 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 131 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 131 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 131 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 131 resolved as shift
WARNING: shift/reduce conflict for OR in state 131 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 132 resolved as shift
WARNING: shift/reduce conflict for ADD in state 132 resolved as shift
WARNING: shift/reduce conflict for SUB in state 132 resolved as shift
WARNING: shift/reduce conflict for MUL in state 132 resolved as shift
WARNING: shift/reduce conflict for DIV in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 132 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 132 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 132 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 132 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 132 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 132 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 133 resolved as shift
WARNING: shift/reduce conflict for ADD in state 133 resolved as shift
WARNING: shift/reduce conflict for SUB in state 133 resolved as shift
WARNING: shift/reduce conflict for MUL in state 133 resolved as shift
WARNING: shift/reduce conflict for DIV in state 133 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 133 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 133 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 133 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 133 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 133 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 133 resolved as shift
WARNING: shift/reduce conflict for OR in state 133 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 134 resolved as shift
WARNING: shift/reduce conflict for ADD in state 134 resolved as shift
WARNING: shift/reduce conflict for SUB in state 134 resolved as shift
WARNING: shift/reduce conflict for MUL in state 134 resolved as shift
WARNING: shift/reduce conflict for DIV in state 134 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 134 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 134 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 134 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 134 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 134 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 134 resolved as shift
WARNING: shift/reduce conflict for AND in state 134 resolved as shift
WARNING: shift/reduce conflict for OR in state 134 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 135 resolved as shift
WARNING: shift/reduce conflict for ADD in state 135 resolved as shift
WARNING: shift/reduce conflict for SUB in state 135 resolved as shift
WARNING: shift/reduce conflict for MUL in state 135 resolved as shift
WARNING: shift/reduce conflict for DIV in state 135 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 135 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 135 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 135 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 135 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 135 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 135 resolved as shift
WARNING: shift/reduce conflict for AND in state 135 resolved as shift
WARNING: shift/reduce conflict for OR in state 135 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 136 resolved as shift
WARNING: shift/reduce conflict for ADD in state 136 resolved as shift
WARNING: shift/reduce conflict for SUB in state 136 resolved as shift
WARNING: shift/reduce conflict for MUL in state 136 resolved as shift
WARNING: shift/reduce conflict for DIV in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 136 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 136 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 136 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 136 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 136 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 136 resolved as shift
WARNING: shift/reduce conflict for AND in state 136 resolved as shift
WARNING: shift/reduce conflict for OR in state 136 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 137 resolved as shift
WARNING: shift/reduce conflict for ADD in state 137 resolved as shift
WARNING: shift/reduce conflict for SUB in state 137 resolved as shift
WARNING: shift/reduce conflict for MUL in state 137 resolved as shift
WARNING: shift/reduce conflict for DIV in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 137 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 137 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 137 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 137 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 137 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 137 resolved as shift
WARNING: shift/reduce conflict for AND in state 137 resolved as shift
WARNING: shift/reduce conflict for OR in state 137 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 138 resolved as shift
WARNING: shift/reduce conflict for ADD in state 138 resolved as shift
WARNING: shift/reduce conflict for SUB in state 138 resolved as shift
WARNING: shift/reduce conflict for MUL in state 138 resolved as shift
WARNING: shift/reduce conflict for DIV in state 138 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 138 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 138 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 138 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 138 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 138 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 138 resolved as shift
WARNING: shift/reduce conflict for AND in state 138 resolved as shift
WARNING: shift/reduce conflict for OR in state 138 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 139 resolved as shift
WARNING: shift/reduce conflict for ADD in state 139 resolved as shift
WARNING: shift/reduce conflict for SUB in state 139 resolved as shift
WARNING: shift/reduce conflict for MUL in state 139 resolved as shift
WARNING: shift/reduce conflict for DIV in state 139 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 139 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 139 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 139 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 139 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 139 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 139 resolved as shift
WARNING: shift/reduce conflict for AND in state 139 resolved as shift
WARNING: shift/reduce conflict for OR in state 139 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 140 resolved as shift
WARNING: shift/reduce conflict for ADD in state 140 resolved as shift
WARNING: shift/reduce conflict for SUB in state 140 resolved as shift
WARNING: shift/reduce conflict for MUL in state 140 resolved as shift
WARNING: shift/reduce conflict for DIV in state 140 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 140 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 140 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 140 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 140 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 140 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 140 resolved as shift
WARNING: shift/reduce conflict for AND in state 140 resolved as shift
WARNING: shift/reduce conflict for OR in state 140 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 141 resolved as shift
WARNING: shift/reduce conflict for ADD in state 141 resolved as shift
WARNING: shift/reduce conflict for SUB in state 141 resolved as shift
WARNING: shift/reduce conflict for MUL in state 141 resolved as shift
WARNING: shift/reduce conflict for DIV in state 141 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 141 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 141 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 141 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 141 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 141 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 142 resolved as shift
WARNING: shift/reduce conflict for ADD in state 142 resolved as shift
WARNING: shift/reduce conflict for SUB in state 142 resolved as shift
WARNING: shift/reduce conflict for MUL in state 142 resolved as shift
WARNING: shift/reduce conflict for DIV in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 142 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 142 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 142 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 142 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 142 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 143 resolved as shift
WARNING: shift/reduce conflict for ADD in state 143 resolved as shift
WARNING: shift/reduce conflict for SUB in state 143 resolved as shift
WARNING: shift/reduce conflict for MUL in state 143 resolved as shift
WARNING: shift/reduce conflict for DIV in state 143 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 143 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 143 resolved as shift
WARNING: shift/reduce conflict for LEFT_SHIFT in state 143 resolved as shift
WARNING: shift/reduce conflict for RIGHT_SHIFT in state 143 resolved as shift
WARNING: shift/reduce conflict for BITWISE_OR in state 143 resolved as shift
WARNING: shift/reduce conflict for BITWISE_AND in state 143 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 199 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 200 resolved as shift
